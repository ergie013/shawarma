{"ast":null,"code":"import { compose, createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nexport default (function (initialState) {\n  initialState = JSON.parse(window.localStorage.getItem(\"state\")) || initialState;\n  var middleware = [thunk];\n  var store = createStore(rootReducer, initialState, compose(applyMiddleware.apply(void 0, middleware)\n  /* window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n             window.__REDUX_DEVTOOLS_EXTENSION__() */\n  ));\n  store.subscribe(function () {\n    var state = store.getState(); //save the config to localstorage\n\n    for (var setting in state.settings.settings) {\n      if (state.settings.settings.hasOwnProperty(setting)) {\n        var element = state.settings.settings[setting];\n        localStorage.setItem(element.key, element.value);\n      }\n    }\n\n    for (var translation in state.languages.language) {\n      if (state.languages.language.hasOwnProperty(translation)) {\n        var trans = state.languages.language[translation];\n        localStorage.setItem(translation, trans);\n      }\n    }\n\n    var persist = {\n      cart: state.cart,\n      total: state.total,\n      items: state.items,\n      pages: state.pages,\n      user: state.user,\n      addresses: state.addresses,\n      delivery_user: state.delivery_user,\n      languages: state.languages.languages,\n      settings: state.settings\n    };\n    localStorage.setItem(\"state\", JSON.stringify(persist)); // const user = {\n    //     user: state.user\n    // };\n    // window.localStorage.setItem(\"user\", JSON.stringify(user.user));\n  });\n  return store;\n});","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/services/store.js"],"names":["compose","createStore","applyMiddleware","thunk","rootReducer","initialState","JSON","parse","window","localStorage","getItem","middleware","store","subscribe","state","getState","setting","settings","hasOwnProperty","element","setItem","key","value","translation","languages","language","trans","persist","cart","total","items","pages","user","addresses","delivery_user","stringify"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,gBAAe,UAACC,YAAD,EAAkB;AAChCA,EAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAX,KAAoDL,YAAnE;AACA,MAAMM,UAAU,GAAG,CAACR,KAAD,CAAnB;AAEA,MAAMS,KAAK,GAAGX,WAAW,CACxBG,WADwB,EAExBC,YAFwB,EAGxBL,OAAO,CACNE,eAAe,MAAf,SAAmBS,UAAnB;AACA;;AAFM,GAHiB,CAAzB;AAUAC,EAAAA,KAAK,CAACC,SAAN,CAAgB,YAAM;AACrB,QAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAd,CADqB,CAErB;;AACA,SAAK,IAAMC,OAAX,IAAsBF,KAAK,CAACG,QAAN,CAAeA,QAArC,EAA+C;AAC9C,UAAIH,KAAK,CAACG,QAAN,CAAeA,QAAf,CAAwBC,cAAxB,CAAuCF,OAAvC,CAAJ,EAAqD;AACpD,YAAMG,OAAO,GAAGL,KAAK,CAACG,QAAN,CAAeA,QAAf,CAAwBD,OAAxB,CAAhB;AACAP,QAAAA,YAAY,CAACW,OAAb,CAAqBD,OAAO,CAACE,GAA7B,EAAkCF,OAAO,CAACG,KAA1C;AACA;AACD;;AAED,SAAK,IAAMC,WAAX,IAA0BT,KAAK,CAACU,SAAN,CAAgBC,QAA1C,EAAoD;AACnD,UAAIX,KAAK,CAACU,SAAN,CAAgBC,QAAhB,CAAyBP,cAAzB,CAAwCK,WAAxC,CAAJ,EAA0D;AACzD,YAAMG,KAAK,GAAGZ,KAAK,CAACU,SAAN,CAAgBC,QAAhB,CAAyBF,WAAzB,CAAd;AACAd,QAAAA,YAAY,CAACW,OAAb,CAAqBG,WAArB,EAAkCG,KAAlC;AACA;AACD;;AAED,QAAMC,OAAO,GAAG;AACfC,MAAAA,IAAI,EAAEd,KAAK,CAACc,IADG;AAEfC,MAAAA,KAAK,EAAEf,KAAK,CAACe,KAFE;AAGfC,MAAAA,KAAK,EAAEhB,KAAK,CAACgB,KAHE;AAIfC,MAAAA,KAAK,EAAEjB,KAAK,CAACiB,KAJE;AAKfC,MAAAA,IAAI,EAAElB,KAAK,CAACkB,IALG;AAMfC,MAAAA,SAAS,EAAEnB,KAAK,CAACmB,SANF;AAOfC,MAAAA,aAAa,EAAEpB,KAAK,CAACoB,aAPN;AAQfV,MAAAA,SAAS,EAAEV,KAAK,CAACU,SAAN,CAAgBA,SARZ;AASfP,MAAAA,QAAQ,EAAEH,KAAK,CAACG;AATD,KAAhB;AAWAR,IAAAA,YAAY,CAACW,OAAb,CAAqB,OAArB,EAA8Bd,IAAI,CAAC6B,SAAL,CAAeR,OAAf,CAA9B,EA5BqB,CA8BrB;AACA;AACA;AACA;AACA,GAlCD;AAoCA,SAAOf,KAAP;AACA,CAnDD","sourcesContent":["import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default (initialState) => {\r\n\tinitialState = JSON.parse(window.localStorage.getItem(\"state\")) || initialState;\r\n\tconst middleware = [thunk];\r\n\r\n\tconst store = createStore(\r\n\t\trootReducer,\r\n\t\tinitialState,\r\n\t\tcompose(\r\n\t\t\tapplyMiddleware(...middleware)\r\n\t\t\t/* window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n              window.__REDUX_DEVTOOLS_EXTENSION__() */\r\n\t\t)\r\n\t);\r\n\r\n\tstore.subscribe(() => {\r\n\t\tconst state = store.getState();\r\n\t\t//save the config to localstorage\r\n\t\tfor (const setting in state.settings.settings) {\r\n\t\t\tif (state.settings.settings.hasOwnProperty(setting)) {\r\n\t\t\t\tconst element = state.settings.settings[setting];\r\n\t\t\t\tlocalStorage.setItem(element.key, element.value);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const translation in state.languages.language) {\r\n\t\t\tif (state.languages.language.hasOwnProperty(translation)) {\r\n\t\t\t\tconst trans = state.languages.language[translation];\r\n\t\t\t\tlocalStorage.setItem(translation, trans);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst persist = {\r\n\t\t\tcart: state.cart,\r\n\t\t\ttotal: state.total,\r\n\t\t\titems: state.items,\r\n\t\t\tpages: state.pages,\r\n\t\t\tuser: state.user,\r\n\t\t\taddresses: state.addresses,\r\n\t\t\tdelivery_user: state.delivery_user,\r\n\t\t\tlanguages: state.languages.languages,\r\n\t\t\tsettings: state.settings,\r\n\t\t};\r\n\t\tlocalStorage.setItem(\"state\", JSON.stringify(persist));\r\n\r\n\t\t// const user = {\r\n\t\t//     user: state.user\r\n\t\t// };\r\n\t\t// window.localStorage.setItem(\"user\", JSON.stringify(user.user));\r\n\t});\r\n\r\n\treturn store;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}