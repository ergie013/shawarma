{"ast":null,"code":"import _regeneratorRuntime from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/shawarma/src/components/Mobile/Checkout/PaymentList/Stripe/StripeIdeal/index.js\";\nimport React, { Component } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { IdealBankElement, Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\nimport Axios from \"axios\";\nimport { STRIPE_PAYMENT, STRIPE_PAYMENT_CAPTURE } from \"../../../../../../configs\";\nimport { connect } from \"react-redux\";\nvar ELEMENT_OPTIONS = {\n  classes: {\n    base: \"StripeElementIdeal\",\n    focus: \"StripeElementIdeal--focus\"\n  },\n  style: {\n    base: {\n      padding: \"10px 8px\",\n      fontSize: \"15px\",\n      color: \"#5f5f5f\",\n      letterSpacing: \"0.025em\",\n      \"::placeholder\": {\n        color: \"#aab7c4\"\n      }\n    },\n    invalid: {\n      color: \"#9e2146\"\n    }\n  }\n};\n\nvar CheckoutForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CheckoutForm, _Component);\n\n  function CheckoutForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CheckoutForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CheckoutForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      errorMessage: null,\n      paymentMethod: null,\n      client_secret: \"\"\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var _this$props, stripe, elements, data, _ref2, error, paymentMethod, id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _this$props = _this.props, stripe = _this$props.stripe, elements = _this$props.elements, data = _this$props.data;\n                _context.next = 4;\n                return stripe.createPaymentMethod({\n                  type: \"ideal\",\n                  ideal: elements.getElement(IdealBankElement)\n                });\n\n              case 4:\n                _ref2 = _context.sent;\n                error = _ref2.error;\n                paymentMethod = _ref2.paymentMethod;\n\n                if (!error) {\n                  data.data.handlePaymentProcessing(true);\n                  id = paymentMethod.id;\n                  Axios.post(STRIPE_PAYMENT, {\n                    token: data.data.user.data.auth_token,\n                    id: id,\n                    amount: data.data.total * 100,\n                    currency: \"eur\",\n                    payment_method_types: [\"ideal\"]\n                  }).then(function (response) {\n                    //payment intent successful, place order\n                    var placeOrderAsync = new Promise(function (resolve) {\n                      data.data.placeOrder(\"\", \"STRIPE\", true);\n                      resolve(\"Order Placed\");\n                    });\n                    placeOrderAsync.then(function () {\n                      _this.setState({\n                        client_secret: response.data.client_secret\n                      }); //after this, it goes to component will receive props\n\n                    });\n                  }).catch(function (error) {\n                    data.data.handlePaymentProcessing(false);\n                    console.log(error);\n                  });\n                }\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleConfirmIdealPayment = function (order) {\n      var _this$props2 = _this.props,\n          stripe = _this$props2.stripe,\n          elements = _this$props2.elements; //if not empty\n\n      if (_this.state.client_secret !== \"\") {\n        var _stripe$confirmIdealP = stripe.confirmIdealPayment(_this.state.client_secret, {\n          payment_method: {\n            ideal: elements.getElement(IdealBankElement),\n            billing_details: {\n              name: _this.state.name\n            }\n          },\n          return_url: STRIPE_PAYMENT_CAPTURE + \"?order_id=\" + order.data.id\n        }),\n            error = _stripe$confirmIdealP.error;\n\n        if (error) {\n          console.log(error.message);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(CheckoutForm, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (this.props.data.data.checkout !== nextProps.data.data.checkout) {\n        console.log(\"Order Placed\");\n        this.handleConfirmIdealPayment(nextProps.data.data.checkout);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const { errorMessage, paymentMethod, name } = this.state;\n      var _this$props3 = this.props,\n          stripe = _this$props3.stripe,\n          data = _this$props3.data;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, localStorage.getItem(\"checkoutCardFullname\")), React.createElement(\"input\", {\n        id: \"name\",\n        required: true,\n        className: \"form-control StripeElement\",\n        onChange: function onChange(event) {\n          _this2.setState({\n            name: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"ideal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, localStorage.getItem(\"checkoutIdealSelectBankText\")), React.createElement(IdealBankElement, {\n        id: \"ideal\",\n        options: ELEMENT_OPTIONS,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !stripe,\n        className: \"btn stripe-pay-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, localStorage.getItem(\"checkoutPayText\"), \" \", localStorage.getItem(\"currencySymbolAlign\") === \"left\" && localStorage.getItem(\"currencyFormat\"), data.data.total, localStorage.getItem(\"currencySymbolAlign\") === \"right\" && localStorage.getItem(\"currencyFormat\"))));\n    }\n  }]);\n\n  return CheckoutForm;\n}(Component);\n\nvar InjectedCheckoutForm = function InjectedCheckoutForm(data) {\n  return React.createElement(ElementsConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, function (_ref3) {\n    var stripe = _ref3.stripe,\n        elements = _ref3.elements;\n    return React.createElement(CheckoutForm, {\n      stripe: stripe,\n      elements: elements,\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    });\n  });\n}; // Make sure to call `loadStripe` outside of a componentâ€™s render to avoid\n// recreating the `Stripe` object on every render.\n\n\nvar stripePromise = loadStripe(localStorage.getItem(\"stripePublicKey\"), {\n  locale: localStorage.getItem(\"stripeLocale\")\n});\n\nvar StripeIdeal = function StripeIdeal(data) {\n  return React.createElement(Elements, {\n    stripe: stripePromise,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(InjectedCheckoutForm, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }));\n}; // export default StripeIdeal;\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    checkout: state.checkout.checkout\n  };\n};\n\nexport default connect(mapStateToProps, {})(StripeIdeal);","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/components/Mobile/Checkout/PaymentList/Stripe/StripeIdeal/index.js"],"names":["React","Component","loadStripe","IdealBankElement","Elements","ElementsConsumer","Axios","STRIPE_PAYMENT","STRIPE_PAYMENT_CAPTURE","connect","ELEMENT_OPTIONS","classes","base","focus","style","padding","fontSize","color","letterSpacing","invalid","CheckoutForm","state","name","errorMessage","paymentMethod","client_secret","handleSubmit","event","preventDefault","props","stripe","elements","data","createPaymentMethod","type","ideal","getElement","error","handlePaymentProcessing","id","post","token","user","auth_token","amount","total","currency","payment_method_types","then","response","placeOrderAsync","Promise","resolve","placeOrder","setState","catch","console","log","handleConfirmIdealPayment","order","confirmIdealPayment","payment_method","billing_details","return_url","message","nextProps","checkout","localStorage","getItem","target","value","InjectedCheckoutForm","stripePromise","locale","StripeIdeal","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { IdealBankElement, Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport Axios from \"axios\";\r\n\r\nimport { STRIPE_PAYMENT, STRIPE_PAYMENT_CAPTURE } from \"../../../../../../configs\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst ELEMENT_OPTIONS = {\r\n\tclasses: {\r\n\t\tbase: \"StripeElementIdeal\",\r\n\t\tfocus: \"StripeElementIdeal--focus\",\r\n\t},\r\n\tstyle: {\r\n\t\tbase: {\r\n\t\t\tpadding: \"10px 8px\",\r\n\t\t\tfontSize: \"15px\",\r\n\t\t\tcolor: \"#5f5f5f\",\r\n\t\t\tletterSpacing: \"0.025em\",\r\n\t\t\t\"::placeholder\": {\r\n\t\t\t\tcolor: \"#aab7c4\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tinvalid: {\r\n\t\t\tcolor: \"#9e2146\",\r\n\t\t},\r\n\t},\r\n};\r\n\r\nclass CheckoutForm extends Component {\r\n\tstate = {\r\n\t\tname: \"\",\r\n\t\terrorMessage: null,\r\n\t\tpaymentMethod: null,\r\n\t\tclient_secret: \"\",\r\n\t};\r\n\r\n\thandleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst { stripe, elements, data } = this.props;\r\n\r\n\t\tconst { error, paymentMethod } = await stripe.createPaymentMethod({\r\n\t\t\ttype: \"ideal\",\r\n\t\t\tideal: elements.getElement(IdealBankElement),\r\n\t\t});\r\n\r\n\t\tif (!error) {\r\n\t\t\tdata.data.handlePaymentProcessing(true);\r\n\t\t\tconst { id } = paymentMethod;\r\n\t\t\tAxios.post(STRIPE_PAYMENT, {\r\n\t\t\t\ttoken: data.data.user.data.auth_token,\r\n\t\t\t\tid: id,\r\n\t\t\t\tamount: data.data.total * 100,\r\n\t\t\t\tcurrency: \"eur\",\r\n\t\t\t\tpayment_method_types: [\"ideal\"],\r\n\t\t\t})\r\n\t\t\t\t.then((response) => {\r\n\t\t\t\t\t//payment intent successful, place order\r\n\t\t\t\t\tconst placeOrderAsync = new Promise((resolve) => {\r\n\t\t\t\t\t\tdata.data.placeOrder(\"\", \"STRIPE\", true);\r\n\t\t\t\t\t\tresolve(\"Order Placed\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tplaceOrderAsync.then(() => {\r\n\t\t\t\t\t\tthis.setState({ client_secret: response.data.client_secret });\r\n\t\t\t\t\t\t//after this, it goes to component will receive props\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function(error) {\r\n\t\t\t\t\tdata.data.handlePaymentProcessing(false);\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\thandleConfirmIdealPayment = (order) => {\r\n\t\tconst { stripe, elements } = this.props;\r\n\r\n\t\t//if not empty\r\n\t\tif (this.state.client_secret !== \"\") {\r\n\t\t\tconst { error } = stripe.confirmIdealPayment(this.state.client_secret, {\r\n\t\t\t\tpayment_method: {\r\n\t\t\t\t\tideal: elements.getElement(IdealBankElement),\r\n\t\t\t\t\tbilling_details: {\r\n\t\t\t\t\t\tname: this.state.name,\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t\treturn_url: STRIPE_PAYMENT_CAPTURE + \"?order_id=\" + order.data.id,\r\n\t\t\t});\r\n\t\t\tif (error) {\r\n\t\t\t\tconsole.log(error.message);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (this.props.data.data.checkout !== nextProps.data.data.checkout) {\r\n\t\t\tconsole.log(\"Order Placed\");\r\n\t\t\tthis.handleConfirmIdealPayment(nextProps.data.data.checkout);\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\t// const { errorMessage, paymentMethod, name } = this.state;\r\n\t\tconst { stripe, data } = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<label htmlFor=\"name\">{localStorage.getItem(\"checkoutCardFullname\")}</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tclassName=\"form-control StripeElement\"\r\n\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\tthis.setState({ name: event.target.value });\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"ideal\">{localStorage.getItem(\"checkoutIdealSelectBankText\")}</label>\r\n\t\t\t\t\t<IdealBankElement id=\"ideal\" options={ELEMENT_OPTIONS} />\r\n\t\t\t\t\t<button type=\"submit\" disabled={!stripe} className=\"btn stripe-pay-btn\">\r\n\t\t\t\t\t\t{localStorage.getItem(\"checkoutPayText\")}{\" \"}\r\n\t\t\t\t\t\t{localStorage.getItem(\"currencySymbolAlign\") === \"left\" &&\r\n\t\t\t\t\t\t\tlocalStorage.getItem(\"currencyFormat\")}\r\n\t\t\t\t\t\t{data.data.total}\r\n\t\t\t\t\t\t{localStorage.getItem(\"currencySymbolAlign\") === \"right\" &&\r\n\t\t\t\t\t\t\tlocalStorage.getItem(\"currencyFormat\")}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst InjectedCheckoutForm = (data) => (\r\n\t<ElementsConsumer>\r\n\t\t{({ stripe, elements }) => <CheckoutForm stripe={stripe} elements={elements} data={data} />}\r\n\t</ElementsConsumer>\r\n);\r\n\r\n// Make sure to call `loadStripe` outside of a componentâ€™s render to avoid\r\n// recreating the `Stripe` object on every render.\r\nconst stripePromise = loadStripe(localStorage.getItem(\"stripePublicKey\"), {\r\n\tlocale: localStorage.getItem(\"stripeLocale\"),\r\n});\r\n\r\nconst StripeIdeal = (data) => {\r\n\treturn (\r\n\t\t<Elements stripe={stripePromise}>\r\n\t\t\t<InjectedCheckoutForm data={data} />\r\n\t\t</Elements>\r\n\t);\r\n};\r\n\r\n// export default StripeIdeal;\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcheckout: state.checkout.checkout,\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{}\r\n)(StripeIdeal);\r\n"]},"metadata":{},"sourceType":"module"}