{"ast":null,"code":"import { CHECK_RESTAURANT_OPERATION_SERVICE, GET_RESTAURANTS_BASED_ON_CATEGORY, GET_RESTAURANTS_CATEGORIES } from \"./actionTypes\";\nimport { CHECK_RESTAURANT_OPERATION_SERVICE_URL, GET_RESTAURANTS_CATEGORIES_URL, GET_FILTERED_RESTAURANTS_URL } from \"../../configs\";\nimport Axios from \"axios\";\nexport var checkRestaurantOperationService = function checkRestaurantOperationService(restaurant_id, latitude, longitude) {\n  return function (dispatch) {\n    Axios.post(CHECK_RESTAURANT_OPERATION_SERVICE_URL, {\n      restaurant_id: restaurant_id,\n      latitude: latitude,\n      longitude: longitude\n    }).then(function (response) {\n      var coupon = response.data;\n      return dispatch({\n        type: CHECK_RESTAURANT_OPERATION_SERVICE,\n        payload: coupon\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getRestaurantsBasedOnCategory = function getRestaurantsBasedOnCategory(lat, lng, category_ids) {\n  return function (dispatch) {\n    Axios.post(GET_FILTERED_RESTAURANTS_URL, {\n      latitude: lat,\n      longitude: lng,\n      category_ids: category_ids\n    }).then(function (response) {\n      var filtered_restaurants = response.data;\n      return dispatch({\n        type: GET_RESTAURANTS_BASED_ON_CATEGORY,\n        payload: filtered_restaurants\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getRestaurantsCategories = function getRestaurantsCategories(slug) {\n  return function (dispatch) {\n    Axios.post(GET_RESTAURANTS_CATEGORIES_URL).then(function (response) {\n      var restaurants_categories = response.data;\n      return dispatch({\n        type: GET_RESTAURANTS_CATEGORIES,\n        payload: restaurants_categories\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/services/restaurant/actions.js"],"names":["CHECK_RESTAURANT_OPERATION_SERVICE","GET_RESTAURANTS_BASED_ON_CATEGORY","GET_RESTAURANTS_CATEGORIES","CHECK_RESTAURANT_OPERATION_SERVICE_URL","GET_RESTAURANTS_CATEGORIES_URL","GET_FILTERED_RESTAURANTS_URL","Axios","checkRestaurantOperationService","restaurant_id","latitude","longitude","dispatch","post","then","response","coupon","data","type","payload","catch","error","console","log","getRestaurantsBasedOnCategory","lat","lng","category_ids","filtered_restaurants","getRestaurantsCategories","slug","restaurants_categories"],"mappings":"AAAA,SACCA,kCADD,EAECC,iCAFD,EAGCC,0BAHD,QAIO,eAJP;AAKA,SACCC,sCADD,EAECC,8BAFD,EAGCC,4BAHD,QAIO,eAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACC,aAAD,EAAgBC,QAAhB,EAA0BC,SAA1B;AAAA,SAAwC,UAACC,QAAD,EAAc;AACpGL,IAAAA,KAAK,CAACM,IAAN,CAAWT,sCAAX,EAAmD;AAClDK,MAAAA,aAAa,EAAEA,aADmC;AAElDC,MAAAA,QAAQ,EAAEA,QAFwC;AAGlDC,MAAAA,SAAS,EAAEA;AAHuC,KAAnD,EAKEG,IALF,CAKO,UAACC,QAAD,EAAc;AACnB,UAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAxB;AACA,aAAOL,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEjB,kCAAR;AAA4CkB,QAAAA,OAAO,EAAEH;AAArD,OAAD,CAAf;AACA,KARF,EASEI,KATF,CASQ,UAASC,KAAT,EAAgB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,KAXF;AAYA,GAb8C;AAAA,CAAxC;AAeP,OAAO,IAAMG,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,GAAD,EAAMC,GAAN,EAAWC,YAAX;AAAA,SAA4B,UAACf,QAAD,EAAc;AACtFL,IAAAA,KAAK,CAACM,IAAN,CAAWP,4BAAX,EAAyC;AACxCI,MAAAA,QAAQ,EAAEe,GAD8B;AAExCd,MAAAA,SAAS,EAAEe,GAF6B;AAGxCC,MAAAA,YAAY,EAAEA;AAH0B,KAAzC,EAKEb,IALF,CAKO,UAACC,QAAD,EAAc;AACnB,UAAMa,oBAAoB,GAAGb,QAAQ,CAACE,IAAtC;AACA,aAAOL,QAAQ,CAAC;AACfM,QAAAA,IAAI,EAAEhB,iCADS;AAEfiB,QAAAA,OAAO,EAAES;AAFM,OAAD,CAAf;AAIA,KAXF,EAYER,KAZF,CAYQ,UAASC,KAAT,EAAgB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,KAdF;AAeA,GAhB4C;AAAA,CAAtC;AAkBP,OAAO,IAAMQ,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,IAAD;AAAA,SAAU,UAAClB,QAAD,EAAc;AAC/DL,IAAAA,KAAK,CAACM,IAAN,CAAWR,8BAAX,EACES,IADF,CACO,UAACC,QAAD,EAAc;AACnB,UAAMgB,sBAAsB,GAAGhB,QAAQ,CAACE,IAAxC;AACA,aAAOL,QAAQ,CAAC;AACfM,QAAAA,IAAI,EAAEf,0BADS;AAEfgB,QAAAA,OAAO,EAAEY;AAFM,OAAD,CAAf;AAIA,KAPF,EAQEX,KARF,CAQQ,UAASC,KAAT,EAAgB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,KAVF;AAWA,GAZuC;AAAA,CAAjC","sourcesContent":["import {\r\n\tCHECK_RESTAURANT_OPERATION_SERVICE,\r\n\tGET_RESTAURANTS_BASED_ON_CATEGORY,\r\n\tGET_RESTAURANTS_CATEGORIES,\r\n} from \"./actionTypes\";\r\nimport {\r\n\tCHECK_RESTAURANT_OPERATION_SERVICE_URL,\r\n\tGET_RESTAURANTS_CATEGORIES_URL,\r\n\tGET_FILTERED_RESTAURANTS_URL,\r\n} from \"../../configs\";\r\nimport Axios from \"axios\";\r\n\r\nexport const checkRestaurantOperationService = (restaurant_id, latitude, longitude) => (dispatch) => {\r\n\tAxios.post(CHECK_RESTAURANT_OPERATION_SERVICE_URL, {\r\n\t\trestaurant_id: restaurant_id,\r\n\t\tlatitude: latitude,\r\n\t\tlongitude: longitude,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst coupon = response.data;\r\n\t\t\treturn dispatch({ type: CHECK_RESTAURANT_OPERATION_SERVICE, payload: coupon });\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const getRestaurantsBasedOnCategory = (lat, lng, category_ids) => (dispatch) => {\r\n\tAxios.post(GET_FILTERED_RESTAURANTS_URL, {\r\n\t\tlatitude: lat,\r\n\t\tlongitude: lng,\r\n\t\tcategory_ids: category_ids,\r\n\t})\r\n\t\t.then((response) => {\r\n\t\t\tconst filtered_restaurants = response.data;\r\n\t\t\treturn dispatch({\r\n\t\t\t\ttype: GET_RESTAURANTS_BASED_ON_CATEGORY,\r\n\t\t\t\tpayload: filtered_restaurants,\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const getRestaurantsCategories = (slug) => (dispatch) => {\r\n\tAxios.post(GET_RESTAURANTS_CATEGORIES_URL)\r\n\t\t.then((response) => {\r\n\t\t\tconst restaurants_categories = response.data;\r\n\t\t\treturn dispatch({\r\n\t\t\t\ttype: GET_RESTAURANTS_CATEGORIES,\r\n\t\t\t\tpayload: restaurants_categories,\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n"]},"metadata":{},"sourceType":"module"}