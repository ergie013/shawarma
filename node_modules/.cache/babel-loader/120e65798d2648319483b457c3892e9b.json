{"ast":null,"code":"import _objectSpread from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { LOGIN_USER, REGISTER_USER, LOGOUT_USER, UPDATE_USER_INFO, SEND_OTP, VERIFY_OTP, RUNNING_ORDER, GET_WALLET_TRANSACTIONS, SEND_PASSWORD_RESET_EMAIL, VERIFY_PASSWORD_RESET_OTP, CHANGE_USER_PASSWORD } from \"./actionTypes\";\nvar initialState = {\n  user: [],\n  running_order: false,\n  wallet: [],\n  reset_mail: [],\n  validate_email_otp: [],\n  change_password: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_USER:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case REGISTER_USER:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case LOGOUT_USER:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case UPDATE_USER_INFO:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case SEND_OTP:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case VERIFY_OTP:\n      return _objectSpread({}, state, {\n        user: action.payload\n      });\n\n    case RUNNING_ORDER:\n      return _objectSpread({}, state, {\n        running_order: action.payload\n      });\n\n    case GET_WALLET_TRANSACTIONS:\n      return _objectSpread({}, state, {\n        wallet: action.payload\n      });\n\n    case SEND_PASSWORD_RESET_EMAIL:\n      return _objectSpread({}, state, {\n        reset_mail: action.payload\n      });\n\n    case VERIFY_PASSWORD_RESET_OTP:\n      return _objectSpread({}, state, {\n        validate_email_otp: action.payload\n      });\n\n    case CHANGE_USER_PASSWORD:\n      return _objectSpread({}, state, {\n        change_password: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/services/user/reducer.js"],"names":["LOGIN_USER","REGISTER_USER","LOGOUT_USER","UPDATE_USER_INFO","SEND_OTP","VERIFY_OTP","RUNNING_ORDER","GET_WALLET_TRANSACTIONS","SEND_PASSWORD_RESET_EMAIL","VERIFY_PASSWORD_RESET_OTP","CHANGE_USER_PASSWORD","initialState","user","running_order","wallet","reset_mail","validate_email_otp","change_password","state","action","type","payload"],"mappings":";AAAA,SACIA,UADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,gBAJJ,EAKIC,QALJ,EAMIC,UANJ,EAOIC,aAPJ,EAQIC,uBARJ,EASIC,yBATJ,EAUIC,yBAVJ,EAWIC,oBAXJ,QAYO,eAZP;AAcA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,aAAa,EAAE,KAFE;AAGjBC,EAAAA,MAAM,EAAE,EAHS;AAIjBC,EAAAA,UAAU,EAAE,EAJK;AAKjBC,EAAAA,kBAAkB,EAAE,EALH;AAMjBC,EAAAA,eAAe,EAAE;AANA,CAArB;AASA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBP,YAAsB;AAAA,MAARQ,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKpB,UAAL;AACI,+BAAYkB,KAAZ;AAAmBN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAAhC;;AACJ,SAAKpB,aAAL;AACI,+BAAYiB,KAAZ;AAAmBN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAAhC;;AACJ,SAAKnB,WAAL;AACI,+BAAYgB,KAAZ;AAAmBN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAAhC;;AACJ,SAAKlB,gBAAL;AACI,+BAAYe,KAAZ;AAAmBN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAAhC;;AACJ,SAAKjB,QAAL;AACI,+BAAYc,KAAZ;AAAmBN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAAhC;;AACJ,SAAKhB,UAAL;AACI,+BAAYa,KAAZ;AAAmBN,QAAAA,IAAI,EAAEO,MAAM,CAACE;AAAhC;;AACJ,SAAKf,aAAL;AACI,+BAAYY,KAAZ;AAAmBL,QAAAA,aAAa,EAAEM,MAAM,CAACE;AAAzC;;AACJ,SAAKd,uBAAL;AACI,+BAAYW,KAAZ;AAAmBJ,QAAAA,MAAM,EAAEK,MAAM,CAACE;AAAlC;;AACJ,SAAKb,yBAAL;AACI,+BAAYU,KAAZ;AAAmBH,QAAAA,UAAU,EAAEI,MAAM,CAACE;AAAtC;;AACJ,SAAKZ,yBAAL;AACI,+BAAYS,KAAZ;AAAmBF,QAAAA,kBAAkB,EAAEG,MAAM,CAACE;AAA9C;;AACJ,SAAKX,oBAAL;AACI,+BAAYQ,KAAZ;AAAmBD,QAAAA,eAAe,EAAEE,MAAM,CAACE;AAA3C;;AACJ;AACI,aAAOH,KAAP;AAxBR;AA0BH","sourcesContent":["import {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    LOGOUT_USER,\r\n    UPDATE_USER_INFO,\r\n    SEND_OTP,\r\n    VERIFY_OTP,\r\n    RUNNING_ORDER,\r\n    GET_WALLET_TRANSACTIONS,\r\n    SEND_PASSWORD_RESET_EMAIL,\r\n    VERIFY_PASSWORD_RESET_OTP,\r\n    CHANGE_USER_PASSWORD\r\n} from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    user: [],\r\n    running_order: false,\r\n    wallet: [],\r\n    reset_mail: [],\r\n    validate_email_otp: [],\r\n    change_password: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, user: action.payload };\r\n        case REGISTER_USER:\r\n            return { ...state, user: action.payload };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: action.payload };\r\n        case UPDATE_USER_INFO:\r\n            return { ...state, user: action.payload };\r\n        case SEND_OTP:\r\n            return { ...state, user: action.payload };\r\n        case VERIFY_OTP:\r\n            return { ...state, user: action.payload };\r\n        case RUNNING_ORDER:\r\n            return { ...state, running_order: action.payload };\r\n        case GET_WALLET_TRANSACTIONS:\r\n            return { ...state, wallet: action.payload };\r\n        case SEND_PASSWORD_RESET_EMAIL:\r\n            return { ...state, reset_mail: action.payload };\r\n        case VERIFY_PASSWORD_RESET_OTP:\r\n            return { ...state, validate_email_otp: action.payload };\r\n        case CHANGE_USER_PASSWORD:\r\n            return { ...state, change_password: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}