{"ast":null,"code":"import _defineProperty from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/opt/lampp/htdocs/shawarma/src/components/Mobile/Auth/ForgotPassword/index.js\";\nimport React, { Component } from \"react\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { Redirect } from \"react-router\";\nimport BackButton from \"../../Elements/BackButton\";\nimport { connect } from \"react-redux\";\nimport { sendPasswordResetMail, verifyPasswordResetOtp, changeUserPassword } from \"../../../../services/user/actions\";\n\nvar ForgotPassword =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ForgotPassword, _Component);\n\n  function ForgotPassword() {\n    var _this;\n\n    _classCallCheck(this, ForgotPassword);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ForgotPassword).call(this));\n    _this.state = {\n      loading: false,\n      email: \"\",\n      code: \"\",\n      password: \"\",\n      show_mail_form: true,\n      show_code_validation_form: false,\n      show_password_change_form: false,\n      error: false,\n      error_msg: \"\",\n      dontHaveOtp: true,\n      completed: false\n    };\n\n    _this.handleInputChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.handleAlreadyHaveOtp = function () {\n      if (_this.validator.fieldValid(\"email\")) {\n        _this.setState({\n          show_mail_form: false,\n          show_code_validation_form: true,\n          dontHaveOtp: false\n        }, function () {\n          _this.refs.otpInput.focus();\n        });\n      } else {\n        _this.refs.emailInput.focus();\n\n        _this.validator.showMessages();\n      }\n    };\n\n    _this.handleDontHaveOtp = function () {\n      _this.setState({\n        show_mail_form: true,\n        show_code_validation_form: false,\n        dontHaveOtp: true\n      }, function () {\n        _this.refs.emailInput.focus();\n      });\n    };\n\n    _this.handleSendEmail = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.fieldValid(\"email\")) {\n        _this.refs.otpEmailSendBtn.setAttribute(\"disabled\", \"disabled\");\n\n        _this.props.sendPasswordResetMail(_this.state.email);\n\n        _this.setState({\n          loading: true\n        });\n      } else {\n        console.log(\"Email Validation Failed\");\n\n        _this.validator.showMessages();\n\n        _this.refs.emailInput.focus();\n      }\n    };\n\n    _this.handleValidateCode = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.fieldValid(\"code\")) {\n        _this.refs.otpVerifyBtn.setAttribute(\"disabled\", \"disabled\");\n\n        _this.props.verifyPasswordResetOtp(_this.state.email, _this.state.code);\n\n        _this.setState({\n          loading: true\n        });\n      } else {\n        console.log(\"Code Validation Failed\");\n\n        _this.validator.showMessages();\n\n        _this.refs.otpInput.focus();\n      }\n    };\n\n    _this.handleChangePassword = function (event) {\n      event.preventDefault();\n\n      if (_this.validator.fieldValid(\"password\")) {\n        _this.refs.changePassBtn.setAttribute(\"disabled\", \"disabled\");\n\n        _this.props.changeUserPassword(_this.state.email, _this.state.code, _this.state.password);\n\n        _this.setState({\n          loading: true\n        });\n      } else {\n        console.log(\"Password Validation Failed\");\n\n        _this.validator.showMessages();\n\n        _this.refs.passwordInput.focus();\n      }\n    };\n\n    _this.validator = new SimpleReactValidator({\n      autoForceUpdate: _assertThisInitialized(_assertThisInitialized(_this)),\n      messages: {\n        required: localStorage.getItem(\"fieldValidationMsg\"),\n        email: localStorage.getItem(\"emailValidationMsg\"),\n        min: localStorage.getItem(\"minimumLengthValidationMessage\")\n      }\n    });\n    return _this;\n  }\n\n  _createClass(ForgotPassword, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      if (this.props.reset_mail !== nextProps.reset_mail) {\n        if (nextProps.reset_mail.success) {\n          console.log(\"Mail Sending Success\");\n          this.setState({\n            loading: false,\n            show_mail_form: false,\n            show_code_validation_form: true,\n            show_password_change_form: false\n          });\n        } else {\n          console.log(\"Mail Sending Failed\");\n          this.refs.otpEmailSendBtn.removeAttribute(\"disabled\", \"disabled\");\n          this.setState({\n            loading: false,\n            error: true\n          });\n\n          if (nextProps.reset_mail.error_code === \"UNF\") {\n            this.setState({\n              error_msg: localStorage.getItem(\"userNotFoundErrorMessage\")\n            });\n          } else {\n            this.setState({\n              error_msg: localStorage.getItem(\"loginErrorMessage\")\n            });\n          }\n        }\n      }\n\n      if (this.props.validate_email_otp !== nextProps.validate_email_otp) {\n        if (nextProps.validate_email_otp.success) {\n          console.log(\"OTP Validation Success\");\n          this.setState({\n            loading: false,\n            show_mail_form: false,\n            show_code_validation_form: false,\n            show_password_change_form: true\n          });\n        } else {\n          console.log(\"OTP Validation Failed\");\n          this.refs.otpVerifyBtn.removeAttribute(\"disabled\", \"disabled\");\n          this.setState({\n            loading: false,\n            error: true\n          });\n\n          if (nextProps.validate_email_otp.error_code === \"UNF\") {\n            console.log(\"userNotFoundErrorMessage\");\n            this.setState({\n              error_msg: localStorage.getItem(\"userNotFoundErrorMessage\")\n            });\n          }\n\n          if (nextProps.validate_email_otp.error_code === \"IVOTP\") {\n            console.log(\"invalidOtpErrorMessage\");\n            this.setState({\n              error_msg: localStorage.getItem(\"invalidOtpErrorMessage\")\n            });\n          }\n\n          if (nextProps.validate_email_otp.error_code === \"SWR\") {\n            console.log(\"loginErrorMessage\");\n            this.setState({\n              error_msg: localStorage.getItem(\"loginErrorMessage\")\n            });\n          }\n        }\n      }\n\n      if (this.props.change_password !== nextProps.change_password) {\n        if (nextProps.change_password.success) {\n          console.log(\"Password Change Success\");\n          this.setState({\n            loading: false,\n            show_mail_form: false,\n            show_code_validation_form: false,\n            show_password_change_form: false,\n            error: false,\n            completed: true\n          }, function () {\n            setTimeout(function () {\n              console.log(\"Redirecting to login page\");\n\n              _this2.context.router.history.push(\"/login\");\n            }, 2000);\n          });\n        } else {\n          console.log(\"Password Change Failed\");\n          this.refs.changePassBtn.removeAttribute(\"disabled\", \"disabled\");\n          this.setState({\n            loading: false,\n            error: true\n          });\n\n          if (nextProps.change_password.error_code === \"UNF\") {\n            this.setState({\n              error_msg: localStorage.getItem(\"userNotFoundErrorMessage\")\n            });\n          }\n\n          if (nextProps.change_password.error_code === \"IVOTP\") {\n            this.setState({\n              error_msg: localStorage.getItem(\"invalidOtpErrorMessage\")\n            });\n          }\n\n          if (nextProps.change_password.error_code === \"SWR\") {\n            this.setState({\n              error_msg: localStorage.getItem(\"loginErrorMessage\")\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state);\n      if (window.innerWidth > 768) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        });\n      }\n\n      if (localStorage.getItem(\"storeColor\") === null) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, this.state.error && React.createElement(\"div\", {\n        className: \"auth-error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"error-shake\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, this.state.error_msg)), React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#f2f4f9\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(BackButton, {\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }))), React.createElement(\"img\", {\n        src: \"/assets/img/login-head.png\",\n        className: \"login-image pull-right mr-15\",\n        alt: \"login-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"login-texts px-15 mt-50 pb-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"login-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, localStorage.getItem(\"resetPasswordPageTitle\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"login-subtitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, localStorage.getItem(\"resetPasswordPageSubTitle\")))), React.createElement(\"div\", {\n        className: \"bg-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, this.state.show_mail_form && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSendEmail,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group px-15 pt-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-12 edit-address-input-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, localStorage.getItem(\"loginLoginEmailLabel\"), \" \", this.validator.message(\"email\", this.state.email, \"required|email\")), React.createElement(\"div\", {\n        className: \"col-md-9 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        onChange: this.handleInputChange,\n        className: \"form-control edit-address-input\",\n        ref: \"emailInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"mt-20 px-15 pt-15 button-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-main\",\n        style: {\n          backgroundColor: localStorage.getItem(\"storeColor\")\n        },\n        ref: \"otpEmailSendBtn\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, localStorage.getItem(\"sendOtpOnEmailButtonText\")))), this.state.dontHaveOtp && React.createElement(\"div\", {\n        className: \"d-flex justify-content-center mt-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-10 btn resend-otp w-75\",\n        onClick: this.handleAlreadyHaveOtp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, localStorage.getItem(\"alreadyHaveResetOtpButtonText\")))), this.state.show_code_validation_form && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleValidateCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group px-15 pt-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-12 edit-address-input-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, localStorage.getItem(\"enterResetOtpMessageText\"), \" \", this.state.email, \" \", this.validator.message(\"code\", this.state.code, \"required\")), React.createElement(\"div\", {\n        className: \"col-md-9 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: \"otpInput\",\n        type: \"text\",\n        name: \"code\",\n        onChange: this.handleInputChange,\n        className: \"form-control edit-address-input\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"mt-20 px-15 pt-15 button-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-main\",\n        style: {\n          backgroundColor: localStorage.getItem(\"storeColor\")\n        },\n        ref: \"otpVerifyBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, localStorage.getItem(\"verifyResetOtpButtonText\")))), !this.state.dontHaveOtp && React.createElement(\"div\", {\n        className: \"d-flex justify-content-center mt-50\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"p-10 btn resend-otp w-75\",\n        onClick: this.handleDontHaveOtp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, localStorage.getItem(\"dontHaveResetOtpButtonText\")))), this.state.show_password_change_form && React.createElement(\"form\", {\n        onSubmit: this.handleChangePassword,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-muted font-w700 px-15 mt-20 mb-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, localStorage.getItem(\"enterNewPasswordText\")), React.createElement(\"div\", {\n        className: \"form-group px-15 pt-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"col-12 edit-address-input-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, localStorage.getItem(\"newPasswordLabelText\"), \" \", this.validator.message(\"password\", this.state.password, \"required|min:8\")), React.createElement(\"div\", {\n        className: \"col-md-9 pb-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        ref: \"passwordInput\",\n        type: \"text\",\n        name: \"password\",\n        onChange: this.handleInputChange,\n        className: \"form-control edit-address-input\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"mt-20 px-15 pt-15 button-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-main\",\n        style: {\n          backgroundColor: localStorage.getItem(\"storeColor\")\n        },\n        ref: \"changePassBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423\n        },\n        __self: this\n      }, localStorage.getItem(\"setNewPasswordButtonText\")))), this.state.loading && React.createElement(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/assets/img/various/spinner.svg\",\n        alt: \"Loading...\",\n        style: {\n          width: \"50px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      })), this.state.completed && React.createElement(\"div\", {\n        className: \"d-flex justify-content-center mt-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/assets/img/order-placed.gif\",\n        alt: \"Completed\",\n        style: {\n          width: \"100px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ForgotPassword;\n}(Component);\n\nForgotPassword.contextTypes = {\n  router: function router() {\n    return null;\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.user,\n    reset_mail: state.user.reset_mail,\n    validate_email_otp: state.user.validate_email_otp,\n    change_password: state.user.change_password\n  };\n};\n\nexport default connect(mapStateToProps, {\n  sendPasswordResetMail: sendPasswordResetMail,\n  verifyPasswordResetOtp: verifyPasswordResetOtp,\n  changeUserPassword: changeUserPassword\n})(ForgotPassword);","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/components/Mobile/Auth/ForgotPassword/index.js"],"names":["React","Component","SimpleReactValidator","Redirect","BackButton","connect","sendPasswordResetMail","verifyPasswordResetOtp","changeUserPassword","ForgotPassword","state","loading","email","code","password","show_mail_form","show_code_validation_form","show_password_change_form","error","error_msg","dontHaveOtp","completed","handleInputChange","event","setState","target","name","value","handleAlreadyHaveOtp","validator","fieldValid","refs","otpInput","focus","emailInput","showMessages","handleDontHaveOtp","handleSendEmail","preventDefault","otpEmailSendBtn","setAttribute","props","console","log","handleValidateCode","otpVerifyBtn","handleChangePassword","changePassBtn","passwordInput","autoForceUpdate","messages","required","localStorage","getItem","min","nextProps","reset_mail","success","removeAttribute","error_code","validate_email_otp","change_password","setTimeout","context","router","history","push","window","innerWidth","backgroundColor","message","width","contextTypes","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport { Redirect } from \"react-router\";\r\nimport BackButton from \"../../Elements/BackButton\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    sendPasswordResetMail,\r\n    verifyPasswordResetOtp,\r\n    changeUserPassword\r\n} from \"../../../../services/user/actions\";\r\n\r\nclass ForgotPassword extends Component {\r\n    constructor() {\r\n        super();\r\n        this.validator = new SimpleReactValidator({\r\n            autoForceUpdate: this,\r\n            messages: {\r\n                required: localStorage.getItem(\"fieldValidationMsg\"),\r\n                email: localStorage.getItem(\"emailValidationMsg\"),\r\n                min: localStorage.getItem(\"minimumLengthValidationMessage\")\r\n            }\r\n        });\r\n    }\r\n\r\n    state = {\r\n        loading: false,\r\n        email: \"\",\r\n        code: \"\",\r\n        password: \"\",\r\n        show_mail_form: true,\r\n        show_code_validation_form: false,\r\n        show_password_change_form: false,\r\n        error: false,\r\n        error_msg: \"\",\r\n        dontHaveOtp: true,\r\n        completed: false\r\n    };\r\n\r\n    static contextTypes = {\r\n        router: () => null\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    handleAlreadyHaveOtp = () => {\r\n        if (this.validator.fieldValid(\"email\")) {\r\n            this.setState(\r\n                {\r\n                    show_mail_form: false,\r\n                    show_code_validation_form: true,\r\n                    dontHaveOtp: false\r\n                },\r\n                () => {\r\n                    this.refs.otpInput.focus();\r\n                }\r\n            );\r\n        } else {\r\n            this.refs.emailInput.focus();\r\n            this.validator.showMessages();\r\n        }\r\n    };\r\n    handleDontHaveOtp = () => {\r\n        this.setState(\r\n            {\r\n                show_mail_form: true,\r\n                show_code_validation_form: false,\r\n                dontHaveOtp: true\r\n            },\r\n            () => {\r\n                this.refs.emailInput.focus();\r\n            }\r\n        );\r\n    };\r\n    handleSendEmail = event => {\r\n        event.preventDefault();\r\n        if (this.validator.fieldValid(\"email\")) {\r\n            this.refs.otpEmailSendBtn.setAttribute(\"disabled\", \"disabled\");\r\n            this.props.sendPasswordResetMail(this.state.email);\r\n            this.setState({ loading: true });\r\n        } else {\r\n            console.log(\"Email Validation Failed\");\r\n            this.validator.showMessages();\r\n            this.refs.emailInput.focus();\r\n        }\r\n    };\r\n\r\n    handleValidateCode = event => {\r\n        event.preventDefault();\r\n        if (this.validator.fieldValid(\"code\")) {\r\n            this.refs.otpVerifyBtn.setAttribute(\"disabled\", \"disabled\");\r\n            this.props.verifyPasswordResetOtp(\r\n                this.state.email,\r\n                this.state.code\r\n            );\r\n            this.setState({ loading: true });\r\n        } else {\r\n            console.log(\"Code Validation Failed\");\r\n            this.validator.showMessages();\r\n            this.refs.otpInput.focus();\r\n        }\r\n    };\r\n\r\n    handleChangePassword = event => {\r\n        event.preventDefault();\r\n        if (this.validator.fieldValid(\"password\")) {\r\n            this.refs.changePassBtn.setAttribute(\"disabled\", \"disabled\");\r\n            this.props.changeUserPassword(\r\n                this.state.email,\r\n                this.state.code,\r\n                this.state.password\r\n            );\r\n            this.setState({ loading: true });\r\n        } else {\r\n            console.log(\"Password Validation Failed\");\r\n            this.validator.showMessages();\r\n            this.refs.passwordInput.focus();\r\n        }\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (this.props.reset_mail !== nextProps.reset_mail) {\r\n            if (nextProps.reset_mail.success) {\r\n                console.log(\"Mail Sending Success\");\r\n                this.setState({\r\n                    loading: false,\r\n                    show_mail_form: false,\r\n                    show_code_validation_form: true,\r\n                    show_password_change_form: false\r\n                });\r\n            } else {\r\n                console.log(\"Mail Sending Failed\");\r\n                this.refs.otpEmailSendBtn.removeAttribute(\r\n                    \"disabled\",\r\n                    \"disabled\"\r\n                );\r\n                this.setState({ loading: false, error: true });\r\n                if (nextProps.reset_mail.error_code === \"UNF\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"userNotFoundErrorMessage\"\r\n                        )\r\n                    });\r\n                } else {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\"loginErrorMessage\")\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.validate_email_otp !== nextProps.validate_email_otp) {\r\n            if (nextProps.validate_email_otp.success) {\r\n                console.log(\"OTP Validation Success\");\r\n                this.setState({\r\n                    loading: false,\r\n                    show_mail_form: false,\r\n                    show_code_validation_form: false,\r\n                    show_password_change_form: true\r\n                });\r\n            } else {\r\n                console.log(\"OTP Validation Failed\");\r\n                this.refs.otpVerifyBtn.removeAttribute(\"disabled\", \"disabled\");\r\n                this.setState({ loading: false, error: true });\r\n                if (nextProps.validate_email_otp.error_code === \"UNF\") {\r\n                    console.log(\"userNotFoundErrorMessage\");\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"userNotFoundErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.validate_email_otp.error_code === \"IVOTP\") {\r\n                    console.log(\"invalidOtpErrorMessage\");\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"invalidOtpErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.validate_email_otp.error_code === \"SWR\") {\r\n                    console.log(\"loginErrorMessage\");\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\"loginErrorMessage\")\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.props.change_password !== nextProps.change_password) {\r\n            if (nextProps.change_password.success) {\r\n                console.log(\"Password Change Success\");\r\n                this.setState(\r\n                    {\r\n                        loading: false,\r\n                        show_mail_form: false,\r\n                        show_code_validation_form: false,\r\n                        show_password_change_form: false,\r\n                        error: false,\r\n                        completed: true\r\n                    },\r\n                    () => {\r\n                        setTimeout(() => {\r\n                            console.log(\"Redirecting to login page\");\r\n                            this.context.router.history.push(\"/login\");\r\n                        }, 2000);\r\n                    }\r\n                );\r\n            } else {\r\n                console.log(\"Password Change Failed\");\r\n                this.refs.changePassBtn.removeAttribute(\"disabled\", \"disabled\");\r\n                this.setState({ loading: false, error: true });\r\n                if (nextProps.change_password.error_code === \"UNF\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"userNotFoundErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.change_password.error_code === \"IVOTP\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\r\n                            \"invalidOtpErrorMessage\"\r\n                        )\r\n                    });\r\n                }\r\n                if (nextProps.change_password.error_code === \"SWR\") {\r\n                    this.setState({\r\n                        error_msg: localStorage.getItem(\"loginErrorMessage\")\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state);\r\n        if (window.innerWidth > 768) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        if (localStorage.getItem(\"storeColor\") === null) {\r\n            return <Redirect to={\"/\"} />;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.error && (\r\n                    <div className=\"auth-error\">\r\n                        <div className=\"error-shake\">\r\n                            {this.state.error_msg}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div style={{ backgroundColor: \"#f2f4f9\" }}>\r\n                    <div className=\"input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <BackButton history={this.props.history} />\r\n                        </div>\r\n                    </div>\r\n                    <img\r\n                        src=\"/assets/img/login-head.png\"\r\n                        className=\"login-image pull-right mr-15\"\r\n                        alt=\"login-header\"\r\n                    />\r\n                    <div className=\"login-texts px-15 mt-50 pb-20\">\r\n                        <span className=\"login-title\">\r\n                            {localStorage.getItem(\"resetPasswordPageTitle\")}\r\n                        </span>\r\n                        <br />\r\n                        <span className=\"login-subtitle\">\r\n                            {localStorage.getItem(\"resetPasswordPageSubTitle\")}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bg-white\">\r\n                    {this.state.show_mail_form && (\r\n                        <React.Fragment>\r\n                            <form onSubmit={this.handleSendEmail}>\r\n                                <div className=\"form-group px-15 pt-30\">\r\n                                    <label className=\"col-12 edit-address-input-label\">\r\n                                        {localStorage.getItem(\r\n                                            \"loginLoginEmailLabel\"\r\n                                        )}{\" \"}\r\n                                        {this.validator.message(\r\n                                            \"email\",\r\n                                            this.state.email,\r\n                                            \"required|email\"\r\n                                        )}\r\n                                    </label>\r\n                                    <div className=\"col-md-9 pb-5\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            name=\"email\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control edit-address-input\"\r\n                                            ref=\"emailInput\"\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-20 px-15 pt-15 button-block\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-main\"\r\n                                        style={{\r\n                                            backgroundColor: localStorage.getItem(\r\n                                                \"storeColor\"\r\n                                            )\r\n                                        }}\r\n                                        ref=\"otpEmailSendBtn\"\r\n                                        required\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"sendOtpOnEmailButtonText\"\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            {this.state.dontHaveOtp && (\r\n                                <div className=\"d-flex justify-content-center mt-50\">\r\n                                    <div\r\n                                        className=\"p-10 btn resend-otp w-75\"\r\n                                        onClick={this.handleAlreadyHaveOtp}\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"alreadyHaveResetOtpButtonText\"\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    {this.state.show_code_validation_form && (\r\n                        <React.Fragment>\r\n                            <form onSubmit={this.handleValidateCode}>\r\n                                <div className=\"form-group px-15 pt-30\">\r\n                                    <label className=\"col-12 edit-address-input-label\">\r\n                                        {localStorage.getItem(\r\n                                            \"enterResetOtpMessageText\"\r\n                                        )}{\" \"}\r\n                                        {this.state.email}{\" \"}\r\n                                        {this.validator.message(\r\n                                            \"code\",\r\n                                            this.state.code,\r\n                                            \"required\"\r\n                                        )}\r\n                                    </label>\r\n                                    <div className=\"col-md-9 pb-5\">\r\n                                        <input\r\n                                            ref=\"otpInput\"\r\n                                            type=\"text\"\r\n                                            name=\"code\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control edit-address-input\"\r\n                                            required\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"mt-20 px-15 pt-15 button-block\">\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-main\"\r\n                                        style={{\r\n                                            backgroundColor: localStorage.getItem(\r\n                                                \"storeColor\"\r\n                                            )\r\n                                        }}\r\n                                        ref=\"otpVerifyBtn\"\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"verifyResetOtpButtonText\"\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                            {!this.state.dontHaveOtp && (\r\n                                <div className=\"d-flex justify-content-center mt-50\">\r\n                                    <div\r\n                                        className=\"p-10 btn resend-otp w-75\"\r\n                                        onClick={this.handleDontHaveOtp}\r\n                                    >\r\n                                        {localStorage.getItem(\r\n                                            \"dontHaveResetOtpButtonText\"\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </React.Fragment>\r\n                    )}\r\n\r\n                    {this.state.show_password_change_form && (\r\n                        <form onSubmit={this.handleChangePassword}>\r\n                            <p className=\"text-muted font-w700 px-15 mt-20 mb-0\">\r\n                                {localStorage.getItem(\"enterNewPasswordText\")}\r\n                            </p>\r\n                            <div className=\"form-group px-15 pt-30\">\r\n                                <label className=\"col-12 edit-address-input-label\">\r\n                                    {localStorage.getItem(\r\n                                        \"newPasswordLabelText\"\r\n                                    )}{\" \"}\r\n                                    {this.validator.message(\r\n                                        \"password\",\r\n                                        this.state.password,\r\n                                        \"required|min:8\"\r\n                                    )}\r\n                                </label>\r\n                                <div className=\"col-md-9 pb-5\">\r\n                                    <input\r\n                                        ref=\"passwordInput\"\r\n                                        type=\"text\"\r\n                                        name=\"password\"\r\n                                        onChange={this.handleInputChange}\r\n                                        className=\"form-control edit-address-input\"\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-20 px-15 pt-15 button-block\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-main\"\r\n                                    style={{\r\n                                        backgroundColor: localStorage.getItem(\r\n                                            \"storeColor\"\r\n                                        )\r\n                                    }}\r\n                                    ref=\"changePassBtn\"\r\n                                >\r\n                                    {localStorage.getItem(\r\n                                        \"setNewPasswordButtonText\"\r\n                                    )}\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    )}\r\n\r\n                    {this.state.loading && (\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <img\r\n                                src=\"/assets/img/various/spinner.svg\"\r\n                                alt=\"Loading...\"\r\n                                style={{ width: \"50px\" }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                    {this.state.completed && (\r\n                        <div className=\"d-flex justify-content-center mt-20\">\r\n                            <img\r\n                                src=\"/assets/img/order-placed.gif\"\r\n                                alt=\"Completed\"\r\n                                style={{ width: \"100px\" }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    user: state.user.user,\r\n    reset_mail: state.user.reset_mail,\r\n    validate_email_otp: state.user.validate_email_otp,\r\n    change_password: state.user.change_password\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n    sendPasswordResetMail,\r\n    verifyPasswordResetOtp,\r\n    changeUserPassword\r\n})(ForgotPassword);\r\n"]},"metadata":{},"sourceType":"module"}