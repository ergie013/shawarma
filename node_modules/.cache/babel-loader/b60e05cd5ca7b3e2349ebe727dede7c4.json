{"ast":null,"code":"import _objectSpread from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { CHECK_RESTAURANT_OPERATION_SERVICE, GET_RESTAURANTS_BASED_ON_CATEGORY, GET_RESTAURANTS_CATEGORIES } from \"./actionTypes\";\nvar initialState = {\n  is_operational: \"\",\n  filtered_restaurants: [],\n  restaurants_categories: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHECK_RESTAURANT_OPERATION_SERVICE:\n      return _objectSpread({}, state, {\n        is_operational: action.payload\n      });\n\n    case GET_RESTAURANTS_BASED_ON_CATEGORY:\n      return _objectSpread({}, state, {\n        filtered_restaurants: action.payload\n      });\n\n    case GET_RESTAURANTS_CATEGORIES:\n      return _objectSpread({}, state, {\n        restaurants_categories: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/services/restaurant/reducer.js"],"names":["CHECK_RESTAURANT_OPERATION_SERVICE","GET_RESTAURANTS_BASED_ON_CATEGORY","GET_RESTAURANTS_CATEGORIES","initialState","is_operational","filtered_restaurants","restaurants_categories","state","action","type","payload"],"mappings":";AAAA,SAASA,kCAAT,EAA6CC,iCAA7C,EAAgFC,0BAAhF,QAAkH,eAAlH;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE,EADC;AAEjBC,EAAAA,oBAAoB,EAAE,EAFL;AAGjBC,EAAAA,sBAAsB,EAAE;AAHP,CAArB;AAMA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,kCAAL;AACI,+BAAYO,KAAZ;AAAmBH,QAAAA,cAAc,EAAEI,MAAM,CAACE;AAA1C;;AACJ,SAAKT,iCAAL;AACI,+BAAYM,KAAZ;AAAmBF,QAAAA,oBAAoB,EAAEG,MAAM,CAACE;AAAhD;;AACJ,SAAKR,0BAAL;AACI,+BAAYK,KAAZ;AAAmBD,QAAAA,sBAAsB,EAAEE,MAAM,CAACE;AAAlD;;AACJ;AACI,aAAOH,KAAP;AARR;AAUH","sourcesContent":["import { CHECK_RESTAURANT_OPERATION_SERVICE, GET_RESTAURANTS_BASED_ON_CATEGORY, GET_RESTAURANTS_CATEGORIES } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n    is_operational: \"\",\r\n    filtered_restaurants: [],\r\n    restaurants_categories: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHECK_RESTAURANT_OPERATION_SERVICE:\r\n            return { ...state, is_operational: action.payload };\r\n        case GET_RESTAURANTS_BASED_ON_CATEGORY:\r\n            return { ...state, filtered_restaurants: action.payload };\r\n        case GET_RESTAURANTS_CATEGORIES:\r\n            return { ...state, restaurants_categories: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}