{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/shawarma/src/components/Mobile/InAppNotification/index.js\";\nimport React, { Component } from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport * as firebase from \"firebase/app\";\n\nvar InAppNotification =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InAppNotification, _Component);\n\n  function InAppNotification() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InAppNotification);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InAppNotification)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      inAppNotificationData: []\n    };\n    _this.audio = new Audio(\"/assets/audio/notification1.mp3\");\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InAppNotification, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (firebase.messaging.isSupported()) {\n        navigator.serviceWorker.addEventListener(\"message\", function (message) {\n          console.log(message.data[\"firebase-messaging-msg-data\"]);\n\n          if (message.data[\"firebase-messaging-msg-data\"] && message.data[\"firebase-messaging-msg-data\"].data) {\n            _this2.audio.play();\n\n            if (\"vibrate\" in navigator) {\n              console.log(\"Vibrating\");\n              navigator.vibrate([\"100\", \"150\", \"100\", \"100\", \"150\", \"100\"]);\n            }\n\n            _this2.setState({\n              open: true,\n              inAppNotificationData: message.data[\"firebase-messaging-msg-data\"].data\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          inAppNotificationData = _this$state.inAppNotificationData,\n          open = _this$state.open;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Dialog, {\n        maxWidth: false,\n        fullWidth: true,\n        fullScreen: false,\n        open: open,\n        onClose: this.handleClose,\n        disableBackdropClick: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"responsive-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, inAppNotificationData.title), React.createElement(DialogContent, {\n        dividers: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"mb-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, inAppNotificationData.message), inAppNotificationData.image && React.createElement(\"img\", {\n        src: inAppNotificationData.image,\n        className: \"img-fluid\",\n        alt: inAppNotificationData.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"inAppNotificationActions mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn inANClose \".concat(inAppNotificationData.click_action && \"mr-2\"),\n        onClick: function onClick() {\n          return _this3.setState({\n            open: false\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, localStorage.getItem(\"inAppCloseButton\")), inAppNotificationData.click_action && React.createElement(\"a\", {\n        className: \"btn inANLink\",\n        href: inAppNotificationData.click_action,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, localStorage.getItem(\"inAppOpenLinkButton\"))), React.createElement(\"div\", {\n        className: \"alert-notify-bell\",\n        style: {\n          top: \"20px\",\n          bottom: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"si si-bell\",\n        style: {\n          color: localStorage.getItem(\"storeColor\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return InAppNotification;\n}(Component);\n\nexport default InAppNotification;","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/components/Mobile/InAppNotification/index.js"],"names":["React","Component","Dialog","DialogTitle","DialogContent","firebase","InAppNotification","state","open","inAppNotificationData","audio","Audio","handleClose","setState","messaging","isSupported","navigator","serviceWorker","addEventListener","message","console","log","data","play","vibrate","title","image","click_action","localStorage","getItem","top","bottom","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport * as firebase from \"firebase/app\";\r\n\r\nclass InAppNotification extends Component {\r\n\tstate = {\r\n\t\topen: false,\r\n\t\tinAppNotificationData: [],\r\n\t};\r\n\taudio = new Audio(\"/assets/audio/notification1.mp3\");\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (firebase.messaging.isSupported()) {\r\n\t\t\tnavigator.serviceWorker.addEventListener(\"message\", (message) => {\r\n\t\t\t\tconsole.log(message.data[\"firebase-messaging-msg-data\"]);\r\n\t\t\t\tif (message.data[\"firebase-messaging-msg-data\"] && message.data[\"firebase-messaging-msg-data\"].data) {\r\n\t\t\t\t\tthis.audio.play();\r\n\t\t\t\t\tif (\"vibrate\" in navigator) {\r\n\t\t\t\t\t\tconsole.log(\"Vibrating\");\r\n\t\t\t\t\t\tnavigator.vibrate([\"100\", \"150\", \"100\", \"100\", \"150\", \"100\"]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\topen: true,\r\n\t\t\t\t\t\tinAppNotificationData: message.data[\"firebase-messaging-msg-data\"].data,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ open: false });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { inAppNotificationData, open } = this.state;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Dialog\r\n\t\t\t\t\tmaxWidth={false}\r\n\t\t\t\t\tfullWidth={true}\r\n\t\t\t\t\tfullScreen={false}\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t\tdisableBackdropClick={true}\r\n\t\t\t\t>\r\n\t\t\t\t\t<DialogTitle id=\"responsive-dialog-title\">{inAppNotificationData.title}</DialogTitle>\r\n\r\n\t\t\t\t\t<DialogContent dividers>\r\n\t\t\t\t\t\t<p className=\"mb-2\">{inAppNotificationData.message}</p>\r\n\r\n\t\t\t\t\t\t{inAppNotificationData.image && (\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\tsrc={inAppNotificationData.image}\r\n\t\t\t\t\t\t\t\tclassName=\"img-fluid\"\r\n\t\t\t\t\t\t\t\talt={inAppNotificationData.title}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t<div className=\"inAppNotificationActions mt-3\">\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName={`btn inANClose ${inAppNotificationData.click_action && \"mr-2\"}`}\r\n\t\t\t\t\t\t\t\tonClick={() => this.setState({ open: false })}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{localStorage.getItem(\"inAppCloseButton\")}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{inAppNotificationData.click_action && (\r\n\t\t\t\t\t\t\t\t<a className=\"btn inANLink\" href={inAppNotificationData.click_action}>\r\n\t\t\t\t\t\t\t\t\t{localStorage.getItem(\"inAppOpenLinkButton\")}\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"alert-notify-bell\" style={{ top: \"20px\", bottom: \"auto\" }}>\r\n\t\t\t\t\t\t\t<i className=\"si si-bell\" style={{ color: localStorage.getItem(\"storeColor\") }} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</DialogContent>\r\n\t\t\t\t</Dialog>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InAppNotification;\r\n"]},"metadata":{},"sourceType":"module"}