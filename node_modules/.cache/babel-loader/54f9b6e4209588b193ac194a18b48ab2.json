{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/shawarma/src/Root.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport React from \"react\";\nimport store from \"./services/store\";\nimport CheckVersion from \"./components/CheckVersion\";\nimport InAppNotification from \"./components/Mobile/InAppNotification\";\nimport PWAPrompt from \"react-ios-pwa-prompt\";\nimport { Offline, Online } from \"react-detect-offline\";\nimport OfflineComponent from \"./components/Mobile/OfflineComponent\";\nimport CustomCssProvider from \"./components/CustomCssProvider\";\nvar polling = {\n  enabled: false\n};\n\nvar Root = function Root(_ref) {\n  var children = _ref.children,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store(initialState),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(CustomCssProvider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Online, {\n    polling: polling,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, children, React.createElement(\"img\", {\n    className: \"cart-empty-img hidden\",\n    src: \"/assets/img/various/offline.png\",\n    alt: \"offline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(CheckVersion, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(InAppNotification, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), localStorage.getItem(\"enIOSPWAPopup\") === \"true\" && React.createElement(PWAPrompt, {\n    delay: 2500,\n    copyTitle: localStorage.getItem(\"iOSPWAPopupTitle\"),\n    copyBody: localStorage.getItem(\"iOSPWAPopupBody\"),\n    copyShareButtonLabel: localStorage.getItem(\"iOSPWAPopupShareButtonLabel\"),\n    copyAddHomeButtonLabel: localStorage.getItem(\"iOSPWAPopupAddButtonLabel\"),\n    copyClosePrompt: localStorage.getItem(\"iOSPWAPopupCloseButtonLabel\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Offline, {\n    polling: polling,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(OfflineComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }))));\n};\n\nserviceWorker.register();\nexport default Root;","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/Root.js"],"names":["serviceWorker","Provider","React","store","CheckVersion","InAppNotification","PWAPrompt","Offline","Online","OfflineComponent","CustomCssProvider","polling","enabled","Root","children","initialState","localStorage","getItem","register"],"mappings":";AAAA,OAAO,KAAKA,aAAZ,MAA+B,iBAA/B;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;AACA,OAAOC,SAAP,MAAsB,sBAAtB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,sBAAhC;AACA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AAEA,IAAMC,OAAO,GAAG;AACfC,EAAAA,OAAO,EAAE;AADM,CAAhB;;AAIA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,+BAAaC,YAAb;AAAA,MAAaA,YAAb,kCAA4B,EAA5B;AAAA,SACZ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEZ,KAAK,CAACY,YAAD,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEJ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEG,QADF,EAEC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAuC,IAAA,GAAG,EAAC,iCAA3C;AAA6E,IAAA,GAAG,EAAC,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,EAIC,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAKEE,YAAY,CAACC,OAAb,CAAqB,eAArB,MAA0C,MAA1C,IACA,oBAAC,SAAD;AACC,IAAA,KAAK,EAAE,IADR;AAEC,IAAA,SAAS,EAAED,YAAY,CAACC,OAAb,CAAqB,kBAArB,CAFZ;AAGC,IAAA,QAAQ,EAAED,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAHX;AAIC,IAAA,oBAAoB,EAAED,YAAY,CAACC,OAAb,CAAqB,6BAArB,CAJvB;AAKC,IAAA,sBAAsB,EAAED,YAAY,CAACC,OAAb,CAAqB,2BAArB,CALzB;AAMC,IAAA,eAAe,EAAED,YAAY,CAACC,OAAb,CAAqB,6BAArB,CANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFD,EAkBC,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEN,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAlBD,CADD,CADY;AAAA,CAAb;;AA2BAX,aAAa,CAACkB,QAAd;AAEA,eAAeL,IAAf","sourcesContent":["import * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport React from \"react\";\r\nimport store from \"./services/store\";\r\n\r\nimport CheckVersion from \"./components/CheckVersion\";\r\nimport InAppNotification from \"./components/Mobile/InAppNotification\";\r\nimport PWAPrompt from \"react-ios-pwa-prompt\";\r\nimport { Offline, Online } from \"react-detect-offline\";\r\nimport OfflineComponent from \"./components/Mobile/OfflineComponent\";\r\nimport CustomCssProvider from \"./components/CustomCssProvider\";\r\n\r\nconst polling = {\r\n\tenabled: false,\r\n};\r\n\r\nconst Root = ({ children, initialState = {} }) => (\r\n\t<React.Fragment>\r\n\t\t<Provider store={store(initialState)}>\r\n\t\t\t<CustomCssProvider />\r\n\t\t\t<Online polling={polling}>\r\n\t\t\t\t{children}\r\n\t\t\t\t<img className=\"cart-empty-img hidden\" src=\"/assets/img/various/offline.png\" alt=\"offline\" />\r\n\t\t\t\t<CheckVersion />\r\n\t\t\t\t<InAppNotification />\r\n\t\t\t\t{localStorage.getItem(\"enIOSPWAPopup\") === \"true\" && (\r\n\t\t\t\t\t<PWAPrompt\r\n\t\t\t\t\t\tdelay={2500}\r\n\t\t\t\t\t\tcopyTitle={localStorage.getItem(\"iOSPWAPopupTitle\")}\r\n\t\t\t\t\t\tcopyBody={localStorage.getItem(\"iOSPWAPopupBody\")}\r\n\t\t\t\t\t\tcopyShareButtonLabel={localStorage.getItem(\"iOSPWAPopupShareButtonLabel\")}\r\n\t\t\t\t\t\tcopyAddHomeButtonLabel={localStorage.getItem(\"iOSPWAPopupAddButtonLabel\")}\r\n\t\t\t\t\t\tcopyClosePrompt={localStorage.getItem(\"iOSPWAPopupCloseButtonLabel\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Online>\r\n\t\t\t<Offline polling={polling}>\r\n\t\t\t\t<OfflineComponent />\r\n\t\t\t</Offline>\r\n\t\t</Provider>\r\n\t</React.Fragment>\r\n);\r\n\r\nserviceWorker.register();\r\n\r\nexport default Root;\r\n"]},"metadata":{},"sourceType":"module"}