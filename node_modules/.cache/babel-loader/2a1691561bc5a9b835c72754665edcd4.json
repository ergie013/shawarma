{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/shawarma/src/components/Mobile/Account/UserInfo/index.js\";\nimport React, { Component } from \"react\";\nimport AvatarSelector from \"./AvatarSelector\";\nimport { connect } from \"react-redux\";\nimport { changeAvatar } from \"../../../../services/user/actions\";\nimport Loading from \"../../../helpers/loading\";\n\nvar UserInfo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserInfo, _Component);\n\n  function UserInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      avatarPopupOpen: false,\n      loading: false\n    };\n\n    _this.openAvatarPopup = function () {\n      _this.setState({\n        avatarPopupOpen: true\n      });\n    };\n\n    _this.handleAvatarChange = function (e) {\n      _this.setState({\n        loading: true\n      });\n\n      _this.props.changeAvatar(_this.props.user_info.auth_token, e.target.getAttribute(\"data-name\")).then(function (response) {\n        if (response && response.success) {\n          _this.props.updateUserInfo();\n\n          _this.setState({\n            loading: false\n          }); // this.setState({ avatarPopupOpen: false });\n\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserInfo, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        avatarPopupOpen: nextProps.avatarPopup\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var user_info = this.props.user_info;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, this.state.loading && React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(AvatarSelector, {\n        avatarPopupOpen: this.state.avatarPopupOpen,\n        handleAvatarChange: this.handleAvatarChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"block-content block-content-full bg-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"font-w600 mb-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, user_info.name), React.createElement(\"p\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, user_info.phone, \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), \" \", user_info.email)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, user_info.avatar == null ? React.createElement(\"img\", {\n        src: \"/assets/img/various/avatars/user2.gif\",\n        alt: user_info.name,\n        style: {\n          width: \"100px\"\n        },\n        onClick: this.openAvatarPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        src: \"/assets/img/various/avatars/\".concat(user_info.avatar, \".gif\"),\n        alt: user_info.name,\n        style: {\n          width: \"100px\"\n        },\n        onClick: this.openAvatarPopup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return UserInfo;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps() {\n  return {};\n};\n\nexport default connect(mapStateToProps, {\n  changeAvatar: changeAvatar\n})(UserInfo);","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/components/Mobile/Account/UserInfo/index.js"],"names":["React","Component","AvatarSelector","connect","changeAvatar","Loading","UserInfo","state","avatarPopupOpen","loading","openAvatarPopup","setState","handleAvatarChange","e","props","user_info","auth_token","target","getAttribute","then","response","success","updateUserInfo","nextProps","avatarPopup","name","phone","email","avatar","width","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport AvatarSelector from \"./AvatarSelector\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeAvatar } from \"../../../../services/user/actions\";\r\nimport Loading from \"../../../helpers/loading\";\r\n\r\nclass UserInfo extends Component {\r\n\tstate = {\r\n\t\tavatarPopupOpen: false,\r\n\t\tloading: false,\r\n\t};\r\n\topenAvatarPopup = () => {\r\n\t\tthis.setState({ avatarPopupOpen: true });\r\n\t};\r\n\thandleAvatarChange = (e) => {\r\n\t\tthis.setState({ loading: true });\r\n\t\tthis.props\r\n\t\t\t.changeAvatar(this.props.user_info.auth_token, e.target.getAttribute(\"data-name\"))\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response && response.success) {\r\n\t\t\t\t\tthis.props.updateUserInfo();\r\n\t\t\t\t\tthis.setState({ loading: false });\r\n\t\t\t\t\t// this.setState({ avatarPopupOpen: false });\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t};\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tthis.setState({ avatarPopupOpen: nextProps.avatarPopup });\r\n\t}\r\n\trender() {\r\n\t\tconst { user_info } = this.props;\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{this.state.loading && <Loading />}\r\n\t\t\t\t<AvatarSelector\r\n\t\t\t\t\tavatarPopupOpen={this.state.avatarPopupOpen}\r\n\t\t\t\t\thandleAvatarChange={this.handleAvatarChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"block-content block-content-full bg-light\">\r\n\t\t\t\t\t<div className=\"d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h2 className=\"font-w600 mb-10\">{user_info.name}</h2>\r\n\t\t\t\t\t\t\t<p className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t{user_info.phone} <br /> {user_info.email}\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{user_info.avatar == null ? (\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc=\"/assets/img/various/avatars/user2.gif\"\r\n\t\t\t\t\t\t\t\t\talt={user_info.name}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\r\n\t\t\t\t\t\t\t\t\tonClick={this.openAvatarPopup}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc={`/assets/img/various/avatars/${user_info.avatar}.gif`}\r\n\t\t\t\t\t\t\t\t\talt={user_info.name}\r\n\t\t\t\t\t\t\t\t\tstyle={{ width: \"100px\" }}\r\n\t\t\t\t\t\t\t\t\tonClick={this.openAvatarPopup}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = () => ({});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ changeAvatar }\r\n)(UserInfo);\r\n"]},"metadata":{},"sourceType":"module"}