{"ast":null,"code":"import { GET_PAGES, GET_SINGLE_PAGE, CLEAR_SINGLE_PAGE } from \"./actionTypes\";\nimport { GET_PAGES_URL, GET_SINGLE_PAGE_URL } from \"../../configs\";\nimport Axios from \"axios\";\nexport var getPages = function getPages() {\n  return function (dispatch) {\n    Axios.post(GET_PAGES_URL).then(function (response) {\n      var pages = response.data;\n      return dispatch({\n        type: GET_PAGES,\n        payload: pages\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var getSinglePage = function getSinglePage(slug) {\n  return function (dispatch) {\n    Axios.post(GET_SINGLE_PAGE_URL, {\n      slug: slug\n    }).then(function (response) {\n      var pages = response.data;\n      return dispatch({\n        type: GET_SINGLE_PAGE,\n        payload: pages\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var clearSinglePage = function clearSinglePage() {\n  return function (dispatch) {\n    var single_page = [];\n    return dispatch({\n      type: CLEAR_SINGLE_PAGE,\n      payload: single_page\n    });\n  };\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/services/pages/actions.js"],"names":["GET_PAGES","GET_SINGLE_PAGE","CLEAR_SINGLE_PAGE","GET_PAGES_URL","GET_SINGLE_PAGE_URL","Axios","getPages","dispatch","post","then","response","pages","data","type","payload","catch","error","console","log","getSinglePage","slug","clearSinglePage","single_page"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,iBAArC,QAA8D,eAA9D;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,eAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,UAAAC,QAAQ,EAAI;AACtCF,IAAAA,KAAK,CAACG,IAAN,CAAWL,aAAX,EACKM,IADL,CACU,UAAAC,QAAQ,EAAI;AACd,UAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAvB;AACA,aAAOL,QAAQ,CAAC;AACZM,QAAAA,IAAI,EAAEb,SADM;AAEZc,QAAAA,OAAO,EAAEH;AAFG,OAAD,CAAf;AAIH,KAPL,EAQKI,KARL,CAQW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAVL;AAWH,GAZuB;AAAA,CAAjB;AAcP,OAAO,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,UAAAb,QAAQ,EAAI;AAC7CF,IAAAA,KAAK,CAACG,IAAN,CAAWJ,mBAAX,EAAgC;AAC5BgB,MAAAA,IAAI,EAAEA;AADsB,KAAhC,EAGKX,IAHL,CAGU,UAAAC,QAAQ,EAAI;AACd,UAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAvB;AACA,aAAOL,QAAQ,CAAC;AACZM,QAAAA,IAAI,EAAEZ,eADM;AAEZa,QAAAA,OAAO,EAAEH;AAFG,OAAD,CAAf;AAIH,KATL,EAUKI,KAVL,CAUW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZL;AAaH,GAdgC;AAAA,CAA1B;AAgBP,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAAAd,QAAQ,EAAI;AAC7C,QAAMe,WAAW,GAAG,EAApB;AACA,WAAOf,QAAQ,CAAC;AACZM,MAAAA,IAAI,EAAEX,iBADM;AAEZY,MAAAA,OAAO,EAAEQ;AAFG,KAAD,CAAf;AAIH,GAN8B;AAAA,CAAxB","sourcesContent":["import { GET_PAGES, GET_SINGLE_PAGE, CLEAR_SINGLE_PAGE } from \"./actionTypes\";\r\nimport { GET_PAGES_URL, GET_SINGLE_PAGE_URL } from \"../../configs\";\r\nimport Axios from \"axios\";\r\n\r\nexport const getPages = () => dispatch => {\r\n    Axios.post(GET_PAGES_URL)\r\n        .then(response => {\r\n            const pages = response.data;\r\n            return dispatch({\r\n                type: GET_PAGES,\r\n                payload: pages\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const getSinglePage = slug => dispatch => {\r\n    Axios.post(GET_SINGLE_PAGE_URL, {\r\n        slug: slug\r\n    })\r\n        .then(response => {\r\n            const pages = response.data;\r\n            return dispatch({\r\n                type: GET_SINGLE_PAGE,\r\n                payload: pages\r\n            });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const clearSinglePage = () => dispatch => {\r\n    const single_page = [];\r\n    return dispatch({\r\n        type: CLEAR_SINGLE_PAGE,\r\n        payload: single_page\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}