{"ast":null,"code":"import { calculateDistance } from \"./calculateDistance\";\n\nvar calculateDistanceGoogle = function calculateDistanceGoogle(lon1, lat1, lon2, lat2, google, fn) {\n  var origins = [{\n    lat: parseFloat(lat1),\n    lng: parseFloat(lon1)\n  }];\n  var destinations = [{\n    lat: parseFloat(lat2),\n    lng: parseFloat(lon2)\n  }];\n  var travelMode = google.maps.TravelMode.DRIVING;\n  var service = new google.maps.DistanceMatrixService();\n  service.getDistanceMatrix({\n    origins: origins,\n    destinations: destinations,\n    travelMode: travelMode\n  }, function (response, status) {\n    console.log(\"RESPONSE\", response);\n    console.log(\"STATUS\", response.rows[0].elements[0].status);\n\n    if (response.rows[0].elements[0].status === \"OK\") {\n      var distance = (response.rows[0].elements[0].distance.value / 1000).toFixed(1);\n      fn(distance);\n    } else {\n      console.log(\"Falling back to basic distance calculation\");\n\n      var _distance = calculateDistance(lon1, lat1, lon2, lat2);\n\n      fn(_distance);\n    }\n  });\n};\n\nexport default calculateDistanceGoogle;","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/components/helpers/calculateDistanceGoogle.js"],"names":["calculateDistance","calculateDistanceGoogle","lon1","lat1","lon2","lat2","google","fn","origins","lat","parseFloat","lng","destinations","travelMode","maps","TravelMode","DRIVING","service","DistanceMatrixService","getDistanceMatrix","response","status","console","log","rows","elements","distance","value","toFixed"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;;AAEA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,MAAzB,EAAiCC,EAAjC,EAAwC;AACvE,MAAMC,OAAO,GAAG,CAAC;AAAEC,IAAAA,GAAG,EAAEC,UAAU,CAACP,IAAD,CAAjB;AAAyBQ,IAAAA,GAAG,EAAED,UAAU,CAACR,IAAD;AAAxC,GAAD,CAAhB;AACA,MAAMU,YAAY,GAAG,CAAC;AAAEH,IAAAA,GAAG,EAAEC,UAAU,CAACL,IAAD,CAAjB;AAAyBM,IAAAA,GAAG,EAAED,UAAU,CAACN,IAAD;AAAxC,GAAD,CAArB;AACA,MAAMS,UAAU,GAAGP,MAAM,CAACQ,IAAP,CAAYC,UAAZ,CAAuBC,OAA1C;AACA,MAAMC,OAAO,GAAG,IAAIX,MAAM,CAACQ,IAAP,CAAYI,qBAAhB,EAAhB;AACAD,EAAAA,OAAO,CAACE,iBAAR,CACC;AACCX,IAAAA,OAAO,EAAEA,OADV;AAECI,IAAAA,YAAY,EAAEA,YAFf;AAGCC,IAAAA,UAAU,EAAEA;AAHb,GADD,EAMC,UAACO,QAAD,EAAWC,MAAX,EAAsB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,QAAQ,CAACI,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BJ,MAAnD;;AAEA,QAAID,QAAQ,CAACI,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BJ,MAA7B,KAAwC,IAA5C,EAAkD;AACjD,UAAIK,QAAQ,GAAG,CAACN,QAAQ,CAACI,IAAT,CAAc,CAAd,EAAiBC,QAAjB,CAA0B,CAA1B,EAA6BC,QAA7B,CAAsCC,KAAtC,GAA8C,IAA/C,EAAqDC,OAArD,CAA6D,CAA7D,CAAf;AACArB,MAAAA,EAAE,CAACmB,QAAD,CAAF;AACA,KAHD,MAGO;AACNJ,MAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ;;AACA,UAAIG,SAAQ,GAAG1B,iBAAiB,CAACE,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,CAAhC;;AACAE,MAAAA,EAAE,CAACmB,SAAD,CAAF;AACA;AACD,GAlBF;AAoBA,CAzBD;;AA2BA,eAAezB,uBAAf","sourcesContent":["import { calculateDistance } from \"./calculateDistance\";\r\n\r\nconst calculateDistanceGoogle = (lon1, lat1, lon2, lat2, google, fn) => {\r\n\tconst origins = [{ lat: parseFloat(lat1), lng: parseFloat(lon1) }];\r\n\tconst destinations = [{ lat: parseFloat(lat2), lng: parseFloat(lon2) }];\r\n\tconst travelMode = google.maps.TravelMode.DRIVING;\r\n\tconst service = new google.maps.DistanceMatrixService();\r\n\tservice.getDistanceMatrix(\r\n\t\t{\r\n\t\t\torigins: origins,\r\n\t\t\tdestinations: destinations,\r\n\t\t\ttravelMode: travelMode,\r\n\t\t},\r\n\t\t(response, status) => {\r\n\t\t\tconsole.log(\"RESPONSE\", response);\r\n\t\t\tconsole.log(\"STATUS\", response.rows[0].elements[0].status);\r\n\r\n\t\t\tif (response.rows[0].elements[0].status === \"OK\") {\r\n\t\t\t\tlet distance = (response.rows[0].elements[0].distance.value / 1000).toFixed(1);\r\n\t\t\t\tfn(distance);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Falling back to basic distance calculation\");\r\n\t\t\t\tlet distance = calculateDistance(lon1, lat1, lon2, lat2);\r\n\t\t\t\tfn(distance);\r\n\t\t\t}\r\n\t\t}\r\n\t);\r\n};\r\n\r\nexport default calculateDistanceGoogle;\r\n"]},"metadata":{},"sourceType":"module"}