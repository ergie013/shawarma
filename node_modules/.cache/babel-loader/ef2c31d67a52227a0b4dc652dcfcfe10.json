{"ast":null,"code":"import { ACCEPT_TO_DELIVER, PICKEDUP_ORDER, DELIVER_ORDER } from \"./actionTypes\";\nimport { GET_SINGLE_DELIVERY_ORDER } from \"../singleorder/actionTypes\";\nimport { ACCEPT_TO_DELIVER_URL, PICKEDUP_ORDER_URL, DELIVER_ORDER_URL } from \"../../../configs\";\nimport Axios from \"axios\";\nexport var acceptToDeliverOrder = function acceptToDeliverOrder(token, delivery_guy_id, order_id) {\n  return function (dispatch) {\n    Axios.post(ACCEPT_TO_DELIVER_URL, {\n      token: token,\n      delivery_guy_id: delivery_guy_id,\n      order_id: order_id\n    }).then(function (response) {\n      var accepted_order = response.data;\n      dispatch({\n        type: ACCEPT_TO_DELIVER,\n        payload: accepted_order\n      });\n      dispatch({\n        type: GET_SINGLE_DELIVERY_ORDER,\n        payload: accepted_order\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var pickupOrder = function pickupOrder(token, order_id) {\n  return function (dispatch) {\n    Axios.post(PICKEDUP_ORDER_URL, {\n      token: token,\n      order_id: order_id\n    }).then(function (response) {\n      var pickup_order = response.data;\n      dispatch({\n        type: PICKEDUP_ORDER,\n        payload: pickup_order\n      });\n      dispatch({\n        type: GET_SINGLE_DELIVERY_ORDER,\n        payload: pickup_order\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var deliverOrder = function deliverOrder(token, order_id, delivery_pin) {\n  return function (dispatch) {\n    Axios.post(DELIVER_ORDER_URL, {\n      token: token,\n      order_id: order_id,\n      delivery_pin: delivery_pin\n    }).then(function (response) {\n      var pickup_order = response.data;\n      dispatch({\n        type: DELIVER_ORDER,\n        payload: pickup_order\n      });\n      dispatch({\n        type: GET_SINGLE_DELIVERY_ORDER,\n        payload: pickup_order\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/services/Delivery/deliveryprogress/actions.js"],"names":["ACCEPT_TO_DELIVER","PICKEDUP_ORDER","DELIVER_ORDER","GET_SINGLE_DELIVERY_ORDER","ACCEPT_TO_DELIVER_URL","PICKEDUP_ORDER_URL","DELIVER_ORDER_URL","Axios","acceptToDeliverOrder","token","delivery_guy_id","order_id","dispatch","post","then","response","accepted_order","data","type","payload","catch","error","console","log","pickupOrder","pickup_order","deliverOrder","delivery_pin"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,cAA5B,EAA4CC,aAA5C,QAAiE,eAAjE;AACA,SAASC,yBAAT,QAA0C,4BAA1C;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,EAAoDC,iBAApD,QAA6E,kBAA7E;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAQC,eAAR,EAAyBC,QAAzB;AAAA,SAAsC,UAAAC,QAAQ,EAAI;AAClFL,IAAAA,KAAK,CAACM,IAAN,CAAWT,qBAAX,EAAkC;AAC9BK,MAAAA,KAAK,EAAEA,KADuB;AAE9BC,MAAAA,eAAe,EAAEA,eAFa;AAG9BC,MAAAA,QAAQ,EAAEA;AAHoB,KAAlC,EAKKG,IALL,CAKU,UAAAC,QAAQ,EAAI;AACd,UAAMC,cAAc,GAAGD,QAAQ,CAACE,IAAhC;AACAL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAElB,iBAAR;AAA2BmB,QAAAA,OAAO,EAAEH;AAApC,OAAD,CAAR;AACAJ,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEf,yBAAR;AAAmCgB,QAAAA,OAAO,EAAEH;AAA5C,OAAD,CAAR;AACH,KATL,EAUKI,KAVL,CAUW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZL;AAaH,GAdmC;AAAA,CAA7B;AAgBP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACf,KAAD,EAAQE,QAAR;AAAA,SAAqB,UAAAC,QAAQ,EAAI;AACxDL,IAAAA,KAAK,CAACM,IAAN,CAAWR,kBAAX,EAA+B;AAC3BI,MAAAA,KAAK,EAAEA,KADoB;AAE3BE,MAAAA,QAAQ,EAAEA;AAFiB,KAA/B,EAIKG,IAJL,CAIU,UAAAC,QAAQ,EAAI;AACd,UAAMU,YAAY,GAAGV,QAAQ,CAACE,IAA9B;AACAL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEjB,cAAR;AAAwBkB,QAAAA,OAAO,EAAEM;AAAjC,OAAD,CAAR;AACAb,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEf,yBAAR;AAAmCgB,QAAAA,OAAO,EAAEM;AAA5C,OAAD,CAAR;AACH,KARL,EASKL,KATL,CASW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAXL;AAYH,GAb0B;AAAA,CAApB;AAeP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAACjB,KAAD,EAAQE,QAAR,EAAkBgB,YAAlB;AAAA,SAAmC,UAAAf,QAAQ,EAAI;AACvEL,IAAAA,KAAK,CAACM,IAAN,CAAWP,iBAAX,EAA8B;AAC1BG,MAAAA,KAAK,EAAEA,KADmB;AAE1BE,MAAAA,QAAQ,EAAEA,QAFgB;AAG1BgB,MAAAA,YAAY,EAAEA;AAHY,KAA9B,EAKKb,IALL,CAKU,UAAAC,QAAQ,EAAI;AACd,UAAMU,YAAY,GAAGV,QAAQ,CAACE,IAA9B;AACAL,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEhB,aAAR;AAAuBiB,QAAAA,OAAO,EAAEM;AAAhC,OAAD,CAAR;AACAb,MAAAA,QAAQ,CAAC;AAAEM,QAAAA,IAAI,EAAEf,yBAAR;AAAmCgB,QAAAA,OAAO,EAAEM;AAA5C,OAAD,CAAR;AACH,KATL,EAUKL,KAVL,CAUW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAZL;AAaH,GAd2B;AAAA,CAArB","sourcesContent":["import { ACCEPT_TO_DELIVER, PICKEDUP_ORDER, DELIVER_ORDER } from \"./actionTypes\";\r\nimport { GET_SINGLE_DELIVERY_ORDER } from \"../singleorder/actionTypes\";\r\nimport { ACCEPT_TO_DELIVER_URL, PICKEDUP_ORDER_URL, DELIVER_ORDER_URL } from \"../../../configs\";\r\nimport Axios from \"axios\";\r\n\r\nexport const acceptToDeliverOrder = (token, delivery_guy_id, order_id) => dispatch => {\r\n    Axios.post(ACCEPT_TO_DELIVER_URL, {\r\n        token: token,\r\n        delivery_guy_id: delivery_guy_id,\r\n        order_id: order_id\r\n    })\r\n        .then(response => {\r\n            const accepted_order = response.data;\r\n            dispatch({ type: ACCEPT_TO_DELIVER, payload: accepted_order });\r\n            dispatch({ type: GET_SINGLE_DELIVERY_ORDER, payload: accepted_order });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const pickupOrder = (token, order_id) => dispatch => {\r\n    Axios.post(PICKEDUP_ORDER_URL, {\r\n        token: token,\r\n        order_id: order_id\r\n    })\r\n        .then(response => {\r\n            const pickup_order = response.data;\r\n            dispatch({ type: PICKEDUP_ORDER, payload: pickup_order });\r\n            dispatch({ type: GET_SINGLE_DELIVERY_ORDER, payload: pickup_order });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const deliverOrder = (token, order_id, delivery_pin) => dispatch => {\r\n    Axios.post(DELIVER_ORDER_URL, {\r\n        token: token,\r\n        order_id: order_id,\r\n        delivery_pin: delivery_pin\r\n    })\r\n        .then(response => {\r\n            const pickup_order = response.data;\r\n            dispatch({ type: DELIVER_ORDER, payload: pickup_order });\r\n            dispatch({ type: GET_SINGLE_DELIVERY_ORDER, payload: pickup_order });\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}