{"ast":null,"code":"import { GET_ALERTS, SET_ALERT_UNREAD_TOTAL } from \"./actionTypes\";\nimport { GET_ALERTS_URL, MARK_ALL_NOTIFICATIONS_READ_URL, MARK_ONE_NOTIFICATION_READ_URL } from \"../../configs\";\nimport Axios from \"axios\";\nexport var getUserNotifications = function getUserNotifications(user_id, token) {\n  return function (dispatch) {\n    Axios.post(GET_ALERTS_URL, {\n      user_id: user_id,\n      token: token\n    }).then(function (response) {\n      var data = response.data;\n      var unread_alerts_count = data.filter(function (alert) {\n        return alert.is_read === 0;\n      }).length;\n      return [dispatch({\n        type: GET_ALERTS,\n        payload: data\n      }), dispatch({\n        type: SET_ALERT_UNREAD_TOTAL,\n        payload: unread_alerts_count\n      })];\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var markAllNotificationsRead = function markAllNotificationsRead(user_id, token) {\n  return function (dispatch) {\n    Axios.post(MARK_ALL_NOTIFICATIONS_READ_URL, {\n      user_id: user_id,\n      token: token\n    }).then(function (response) {\n      var data = response.data;\n      var unread_alerts_count = data.filter(function (alert) {\n        return alert.is_read === 0;\n      }).length;\n      return [dispatch({\n        type: GET_ALERTS,\n        payload: data\n      }), dispatch({\n        type: SET_ALERT_UNREAD_TOTAL,\n        payload: unread_alerts_count\n      })];\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport var markOneNotificationRead = function markOneNotificationRead(user_id, notification_id, token) {\n  return function (dispatch) {\n    return Axios.post(MARK_ONE_NOTIFICATION_READ_URL, {\n      user_id: user_id,\n      notification_id: notification_id,\n      token: token\n    }).then(function (response) {\n      var data = response.data;\n      var unread_alerts_count = data.filter(function (alert) {\n        return alert.is_read === 0;\n      }).length;\n      return [dispatch({\n        type: GET_ALERTS,\n        payload: data\n      }), dispatch({\n        type: SET_ALERT_UNREAD_TOTAL,\n        payload: unread_alerts_count\n      })];\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}; // export const setAlertUnreadTotal = total => dispatch => {\n// \treturn dispatch({ type: SET_ALERT_UNREAD_TOTAL, payload: total });\n// };","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/services/alert/actions.js"],"names":["GET_ALERTS","SET_ALERT_UNREAD_TOTAL","GET_ALERTS_URL","MARK_ALL_NOTIFICATIONS_READ_URL","MARK_ONE_NOTIFICATION_READ_URL","Axios","getUserNotifications","user_id","token","dispatch","post","then","response","data","unread_alerts_count","filter","alert","is_read","length","type","payload","catch","error","console","log","markAllNotificationsRead","markOneNotificationRead","notification_id"],"mappings":"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","sourcesContent":["import { GET_ALERTS, SET_ALERT_UNREAD_TOTAL } from \"./actionTypes\";\r\nimport { GET_ALERTS_URL, MARK_ALL_NOTIFICATIONS_READ_URL, MARK_ONE_NOTIFICATION_READ_URL } from \"../../configs\";\r\nimport Axios from \"axios\";\r\n\r\nexport const getUserNotifications = (user_id, token) => dispatch => {\r\n\tAxios.post(GET_ALERTS_URL, {\r\n\t\tuser_id: user_id,\r\n\t\ttoken: token\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tconst data = response.data;\r\n\t\t\tconst unread_alerts_count = data.filter(alert => alert.is_read === 0).length;\r\n\t\t\treturn [\r\n\t\t\t\tdispatch({ type: GET_ALERTS, payload: data }),\r\n\t\t\t\tdispatch({ type: SET_ALERT_UNREAD_TOTAL, payload: unread_alerts_count })\r\n\t\t\t];\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const markAllNotificationsRead = (user_id, token) => dispatch => {\r\n\tAxios.post(MARK_ALL_NOTIFICATIONS_READ_URL, {\r\n\t\tuser_id: user_id,\r\n\t\ttoken: token\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tconst data = response.data;\r\n\t\t\tconst unread_alerts_count = data.filter(alert => alert.is_read === 0).length;\r\n\t\t\treturn [\r\n\t\t\t\tdispatch({ type: GET_ALERTS, payload: data }),\r\n\t\t\t\tdispatch({ type: SET_ALERT_UNREAD_TOTAL, payload: unread_alerts_count })\r\n\t\t\t];\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\nexport const markOneNotificationRead = (user_id, notification_id, token) => dispatch => {\r\n\treturn Axios.post(MARK_ONE_NOTIFICATION_READ_URL, {\r\n\t\tuser_id: user_id,\r\n\t\tnotification_id: notification_id,\r\n\t\ttoken: token\r\n\t})\r\n\t\t.then(response => {\r\n\t\t\tconst data = response.data;\r\n\r\n\t\t\tconst unread_alerts_count = data.filter(alert => alert.is_read === 0).length;\r\n\r\n\t\t\treturn [\r\n\t\t\t\tdispatch({ type: GET_ALERTS, payload: data }),\r\n\t\t\t\tdispatch({ type: SET_ALERT_UNREAD_TOTAL, payload: unread_alerts_count })\r\n\t\t\t];\r\n\t\t})\r\n\t\t.catch(function(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n};\r\n\r\n// export const setAlertUnreadTotal = total => dispatch => {\r\n// \treturn dispatch({ type: SET_ALERT_UNREAD_TOTAL, payload: total });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}