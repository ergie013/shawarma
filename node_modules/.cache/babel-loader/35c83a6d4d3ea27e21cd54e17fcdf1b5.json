{"ast":null,"code":"import _classCallCheck from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/opt/lampp/htdocs/shawarma/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/opt/lampp/htdocs/shawarma/src/components/Mobile/FloatCart/index.js\";\nimport React, { Component } from \"react\";\nimport { loadCart, removeProduct } from \"../../../services/cart/actions\";\nimport DelayLink from \"../../helpers/delayLink\";\nimport Fade from \"react-reveal/Fade\";\nimport Ink from \"react-ink\";\nimport { connect } from \"react-redux\";\nimport { formatPrice } from \"../../helpers/formatPrice\";\nimport { updateCart } from \"../../../services/total/actions\";\n\nvar Cart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Cart, _Component);\n\n  function Cart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Cart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false,\n      removeProductFromPreviousRestaurant: false\n    };\n\n    _this.openFloatCart = function () {\n      _this.setState({\n        isOpen: true\n      });\n    };\n\n    _this.closeFloatCart = function () {\n      _this.setState({\n        isOpen: false\n      });\n    };\n\n    _this.addProduct = function (product) {\n      var _this$props = _this.props,\n          cartProducts = _this$props.cartProducts,\n          updateCart = _this$props.updateCart; //get restaurant id and save to localStorage as active restaurant\n\n      localStorage.setItem(\"activeRestaurant\", product.restaurant_id);\n      var productAlreadyInCart = false;\n      cartProducts.forEach(function (cp) {\n        // first check if the restaurent id matches with items in cart\n        // if restaurant id doesn't match, then remove all products from cart\n        // then continue to add the new product to cart\n        if (cp.restaurant_id === product.restaurant_id) {\n          // then add the item to cart or increment count\n          if (cp.id === product.id) {\n            //check if product has customizations, and if the customization matches with any\n            if (JSON.stringify(cp.selectedaddons) === JSON.stringify(product.selectedaddons)) {\n              // increment the item quantity by 1\n              cp.quantity += 1;\n              productAlreadyInCart = true;\n            }\n          }\n        } else {\n          // else if restaurant id doesn't match, then remove all products from cart\n          _this.setState({\n            removeProductFromPreviousRestaurant: true\n          });\n\n          setTimeout(function () {\n            _this.setState({\n              removeProductFromPreviousRestaurant: false\n            });\n          }, 4 * 1000);\n          cartProducts.splice(0, cartProducts.length);\n        }\n      });\n\n      if (!productAlreadyInCart) {\n        cartProducts.push(product);\n      }\n\n      updateCart(cartProducts);\n\n      _this.openFloatCart();\n    };\n\n    _this.removeProduct = function (product) {\n      var _this$props2 = _this.props,\n          cartProducts = _this$props2.cartProducts,\n          updateCart = _this$props2.updateCart;\n      var index = cartProducts.findIndex(function (p) {\n        return p.id === product.id;\n      }); //if product is in the cart then index will be greater than 0\n\n      if (index >= 0) {\n        cartProducts.forEach(function (cp) {\n          if (cp.id === product.id) {\n            if (cp.quantity === 1) {\n              //if quantity is 1 then remove product from cart\n              cartProducts.splice(index, 1);\n            } else {\n              //else decrement the quantity by 1\n              cp.quantity -= product.quantity;\n            }\n          }\n        });\n        updateCart(cartProducts);\n\n        if (cartProducts.length < 1) {\n          _this.closeFloatCart();\n\n          localStorage.removeItem(\"activeRestaurant\");\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var cartProducts = this.props.cartProducts;\n\n      if (cartProducts.length) {\n        this.setState({\n          isOpen: true\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.newProduct !== this.props.newProduct) {\n        this.addProduct(nextProps.newProduct);\n      }\n\n      if (nextProps.productToRemove !== this.props.productToRemove) {\n        this.removeProduct(nextProps.productToRemove);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          cartTotal = _this$props3.cartTotal,\n          cartProducts = _this$props3.cartProducts;\n      var classes = [\"float-cart\"];\n\n      if (!!this.state.isOpen) {\n        classes.push(\"float-cart--open\");\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, this.state.removeProductFromPreviousRestaurant && React.createElement(Fade, {\n        duration: 250,\n        bottom: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"auth-error going-different-restaurant-notify\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, localStorage.getItem(\"itemsRemovedMsg\")))), React.createElement(\"div\", {\n        className: classes.join(\" \"),\n        style: {\n          backgroundColor: localStorage.getItem(\"cartColorBg\"),\n          color: localStorage.getItem(\"cartColorText\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, cartProducts.length ? React.createElement(DelayLink, {\n        to: \"/cart\",\n        delay: 200,\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, cartTotal.productQuantity, \" \", localStorage.getItem(\"floatCartItemsText\")), React.createElement(\"span\", {\n        className: \"pl-5 pr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"\\xA0|\\xA0\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, localStorage.getItem(\"currencySymbolAlign\") === \"left\" && localStorage.getItem(\"currencyFormat\"), formatPrice(cartTotal.totalPrice), localStorage.getItem(\"currencySymbolAlign\") === \"right\" && localStorage.getItem(\"currencyFormat\")), React.createElement(\"span\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, localStorage.getItem(\"floatCartViewCartText\"), \" \", React.createElement(\"i\", {\n        className: \"si si-basket\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(Ink, {\n        duration: \"500\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"\\xA0\")));\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cartProducts: state.cart.products,\n    newProduct: state.cart.productToAdd,\n    productToRemove: state.cart.productToRemove,\n    cartTotal: state.total.data\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCart: loadCart,\n  updateCart: updateCart,\n  removeProduct: removeProduct\n})(Cart);","map":{"version":3,"sources":["/opt/lampp/htdocs/shawarma/src/components/Mobile/FloatCart/index.js"],"names":["React","Component","loadCart","removeProduct","DelayLink","Fade","Ink","connect","formatPrice","updateCart","Cart","state","isOpen","removeProductFromPreviousRestaurant","openFloatCart","setState","closeFloatCart","addProduct","product","props","cartProducts","localStorage","setItem","restaurant_id","productAlreadyInCart","forEach","cp","id","JSON","stringify","selectedaddons","quantity","setTimeout","splice","length","push","index","findIndex","p","removeItem","nextProps","newProduct","productToRemove","cartTotal","classes","getItem","join","backgroundColor","color","productQuantity","totalPrice","mapStateToProps","cart","products","productToAdd","total","data"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { loadCart, removeProduct } from \"../../../services/cart/actions\";\r\n\r\nimport DelayLink from \"../../helpers/delayLink\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Ink from \"react-ink\";\r\nimport { connect } from \"react-redux\";\r\nimport { formatPrice } from \"../../helpers/formatPrice\";\r\nimport { updateCart } from \"../../../services/total/actions\";\r\n\r\nclass Cart extends Component {\r\n\tstate = {\r\n\t\tisOpen: false,\r\n\t\tremoveProductFromPreviousRestaurant: false,\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tconst { cartProducts } = this.props;\r\n\t\tif (cartProducts.length) {\r\n\t\t\tthis.setState({ isOpen: true });\r\n\t\t}\r\n\t}\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.newProduct !== this.props.newProduct) {\r\n\t\t\tthis.addProduct(nextProps.newProduct);\r\n\t\t}\r\n\r\n\t\tif (nextProps.productToRemove !== this.props.productToRemove) {\r\n\t\t\tthis.removeProduct(nextProps.productToRemove);\r\n\t\t}\r\n\t}\r\n\r\n\topenFloatCart = () => {\r\n\t\tthis.setState({ isOpen: true });\r\n\t};\r\n\r\n\tcloseFloatCart = () => {\r\n\t\tthis.setState({ isOpen: false });\r\n\t};\r\n\r\n\taddProduct = (product) => {\r\n\t\tconst { cartProducts, updateCart } = this.props;\r\n\r\n\t\t//get restaurant id and save to localStorage as active restaurant\r\n\t\tlocalStorage.setItem(\"activeRestaurant\", product.restaurant_id);\r\n\r\n\t\tlet productAlreadyInCart = false;\r\n\t\tcartProducts.forEach((cp) => {\r\n\t\t\t// first check if the restaurent id matches with items in cart\r\n\t\t\t// if restaurant id doesn't match, then remove all products from cart\r\n\t\t\t// then continue to add the new product to cart\r\n\t\t\tif (cp.restaurant_id === product.restaurant_id) {\r\n\t\t\t\t// then add the item to cart or increment count\r\n\t\t\t\tif (cp.id === product.id) {\r\n\t\t\t\t\t//check if product has customizations, and if the customization matches with any\r\n\t\t\t\t\tif (JSON.stringify(cp.selectedaddons) === JSON.stringify(product.selectedaddons)) {\r\n\t\t\t\t\t\t// increment the item quantity by 1\r\n\t\t\t\t\t\tcp.quantity += 1;\r\n\t\t\t\t\t\tproductAlreadyInCart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// else if restaurant id doesn't match, then remove all products from cart\r\n\t\t\t\tthis.setState({ removeProductFromPreviousRestaurant: true });\r\n\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.setState({ removeProductFromPreviousRestaurant: false });\r\n\t\t\t\t}, 4 * 1000);\r\n\r\n\t\t\t\tcartProducts.splice(0, cartProducts.length);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (!productAlreadyInCart) {\r\n\t\t\tcartProducts.push(product);\r\n\t\t}\r\n\r\n\t\tupdateCart(cartProducts);\r\n\t\tthis.openFloatCart();\r\n\t};\r\n\r\n\tremoveProduct = (product) => {\r\n\t\tconst { cartProducts, updateCart } = this.props;\r\n\r\n\t\tconst index = cartProducts.findIndex((p) => p.id === product.id);\r\n\r\n\t\t//if product is in the cart then index will be greater than 0\r\n\t\tif (index >= 0) {\r\n\t\t\tcartProducts.forEach((cp) => {\r\n\t\t\t\tif (cp.id === product.id) {\r\n\t\t\t\t\tif (cp.quantity === 1) {\r\n\t\t\t\t\t\t//if quantity is 1 then remove product from cart\r\n\t\t\t\t\t\tcartProducts.splice(index, 1);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t//else decrement the quantity by 1\r\n\t\t\t\t\t\tcp.quantity -= product.quantity;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tupdateCart(cartProducts);\r\n\t\t\tif (cartProducts.length < 1) {\r\n\t\t\t\tthis.closeFloatCart();\r\n\t\t\t\tlocalStorage.removeItem(\"activeRestaurant\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { cartTotal, cartProducts } = this.props;\r\n\r\n\t\tlet classes = [\"float-cart\"];\r\n\r\n\t\tif (!!this.state.isOpen) {\r\n\t\t\tclasses.push(\"float-cart--open\");\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{this.state.removeProductFromPreviousRestaurant && (\r\n\t\t\t\t\t<Fade duration={250} bottom>\r\n\t\t\t\t\t\t<div className=\"auth-error going-different-restaurant-notify\">\r\n\t\t\t\t\t\t\t<div className=\"\">{localStorage.getItem(\"itemsRemovedMsg\")}</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Fade>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={classes.join(\" \")}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: localStorage.getItem(\"cartColorBg\"),\r\n\t\t\t\t\t\tcolor: localStorage.getItem(\"cartColorText\"),\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{cartProducts.length ? (\r\n\t\t\t\t\t\t<DelayLink to={\"/cart\"} delay={200} className=\"text-white\">\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{cartTotal.productQuantity} {localStorage.getItem(\"floatCartItemsText\")}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span className=\"pl-5 pr-5\">&nbsp;|&nbsp;</span>\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t{localStorage.getItem(\"currencySymbolAlign\") === \"left\" &&\r\n\t\t\t\t\t\t\t\t\tlocalStorage.getItem(\"currencyFormat\")}\r\n\t\t\t\t\t\t\t\t{formatPrice(cartTotal.totalPrice)}\r\n\t\t\t\t\t\t\t\t{localStorage.getItem(\"currencySymbolAlign\") === \"right\" &&\r\n\t\t\t\t\t\t\t\t\tlocalStorage.getItem(\"currencyFormat\")}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t{/* <span>{`${localStorage.getItem(\"currencyFormat\")} ${formatPrice(cartTotal.totalPrice)}`}</span> */}\r\n\t\t\t\t\t\t\t<span className=\"pull-right\">\r\n\t\t\t\t\t\t\t\t{localStorage.getItem(\"floatCartViewCartText\")} <i className=\"si si-basket\" />\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<Ink duration=\"500\" />\r\n\t\t\t\t\t\t</DelayLink>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span>&nbsp;</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tcartProducts: state.cart.products,\r\n\tnewProduct: state.cart.productToAdd,\r\n\tproductToRemove: state.cart.productToRemove,\r\n\tcartTotal: state.total.data,\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ loadCart, updateCart, removeProduct }\r\n)(Cart);\r\n"]},"metadata":{},"sourceType":"module"}